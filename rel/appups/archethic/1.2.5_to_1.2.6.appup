{"1.2.6",
 [{"1.2.5",
   [{add_module,'Elixir.ArchethicWeb.AEWeb.DirListingView'},
    {add_module,'Elixir.ArchethicWeb.AEWeb.Domain'},
    {add_module,'Elixir.ArchethicWeb.AEWeb.WebHostingController.DirectoryListing'},
    {add_module,'Elixir.ArchethicWeb.AEWeb.WebHostingController.ReferenceTransaction'},
    {add_module,'Elixir.ArchethicWeb.AEWeb.WebHostingController.Resources'},
    {add_module,'Elixir.ArchethicWeb.AEWeb.WebHostingController'},
    {add_module,'Elixir.ArchethicWeb.AEWeb'},
    {add_module,'Elixir.ArchethicWeb.API.GraphQL.Context'},
    {add_module,'Elixir.ArchethicWeb.API.GraphQL.Schema.AddressType'},
    {add_module,'Elixir.ArchethicWeb.API.GraphQL.Schema.BeaconChainSummary'},
    {add_module,'Elixir.ArchethicWeb.API.GraphQL.Schema.Compiled'},
    {add_module,'Elixir.ArchethicWeb.API.GraphQL.Schema.ContentType'},
    {add_module,'Elixir.ArchethicWeb.API.GraphQL.Schema.DateTimeType'},
    {add_module,'Elixir.ArchethicWeb.API.GraphQL.Schema.HashType'},
    {add_module,'Elixir.ArchethicWeb.API.GraphQL.Schema.HexType'},
    {add_module,'Elixir.ArchethicWeb.API.GraphQL.Schema.IntegerType'},
    {add_module,'Elixir.ArchethicWeb.API.GraphQL.Schema.OracleData'},
    {add_module,'Elixir.ArchethicWeb.API.GraphQL.Schema.P2PType'},
    {add_module,'Elixir.ArchethicWeb.API.GraphQL.Schema.PublicKeyType'},
    {add_module,'Elixir.ArchethicWeb.API.GraphQL.Schema.Resolver'},
    {add_module,'Elixir.ArchethicWeb.API.GraphQL.Schema.SharedSecretsType'},
    {add_module,'Elixir.ArchethicWeb.API.GraphQL.Schema.SortOrderEnum'},
    {add_module,'Elixir.ArchethicWeb.API.GraphQL.Schema.TransactionAttestation'},
    {add_module,'Elixir.ArchethicWeb.API.GraphQL.Schema.TransactionError'},
    {add_module,'Elixir.ArchethicWeb.API.GraphQL.Schema.TransactionType'},
    {add_module,'Elixir.ArchethicWeb.API.GraphQL.Schema.Version'},
    {add_module,'Elixir.ArchethicWeb.API.GraphQL.Schema'},
    {add_module,'Elixir.ArchethicWeb.API'},
    {add_module,'Elixir.ArchethicWeb.APIRouter.Helpers'},
    {add_module,'Elixir.ArchethicWeb.APIRouter'},
    {add_module,'Elixir.ArchethicWeb.DNSLinkRouter'},
    {add_module,'Elixir.ArchethicWeb.Explorer.BeaconChainLive'},
    {add_module,'Elixir.ArchethicWeb.Explorer.CodeController'},
    {add_module,'Elixir.ArchethicWeb.Explorer.CodeProposalChatLive'},
    {add_module,'Elixir.ArchethicWeb.Explorer.CodeProposalDetailsLive'},
    {add_module,'Elixir.ArchethicWeb.Explorer.CodeProposalsLive'},
    {add_module,'Elixir.ArchethicWeb.Explorer.CodeView'},
    {add_module,'Elixir.ArchethicWeb.Explorer.CodeViewerLive'},
    {add_module,'Elixir.ArchethicWeb.Explorer.DashboardLive'},
    {add_module,'Elixir.ArchethicWeb.Explorer.DashboardView'},
    {add_module,'Elixir.ArchethicWeb.Explorer.ErrorView'},
    {add_module,'Elixir.ArchethicWeb.Explorer.ExplorerController'},
    {add_module,'Elixir.ArchethicWeb.Explorer.ExplorerIndexLive.TopTransactionsComponent'},
    {add_module,'Elixir.ArchethicWeb.Explorer.ExplorerIndexLive'},
    {add_module,'Elixir.ArchethicWeb.Explorer.ExplorerLive.TopTransactionsCache'},
    {add_module,'Elixir.ArchethicWeb.Explorer.ExplorerRootController'},
    {add_module,'Elixir.ArchethicWeb.Explorer.ExplorerView'},
    {add_module,'Elixir.ArchethicWeb.Explorer.FaucetController'},
    {add_module,'Elixir.ArchethicWeb.Explorer.FaucetRateLimiter'},
    {add_module,'Elixir.ArchethicWeb.Explorer.FaucetView'},
    {add_module,'Elixir.ArchethicWeb.Explorer.LayoutView'},
    {add_module,'Elixir.ArchethicWeb.Explorer.MetricsController'},
    {add_module,'Elixir.ArchethicWeb.Explorer.NodeDetailsLive'},
    {add_module,'Elixir.ArchethicWeb.Explorer.NodeListLive'},
    {add_module,'Elixir.ArchethicWeb.Explorer.NodeSharedSecretsChainLive'},
    {add_module,'Elixir.ArchethicWeb.Explorer.NodeView'},
    {add_module,'Elixir.ArchethicWeb.Explorer.OracleChainLive'},
    {add_module,'Elixir.ArchethicWeb.Explorer.OriginChainLive'},
    {add_module,'Elixir.ArchethicWeb.Explorer.Pagination'},
    {add_module,'Elixir.ArchethicWeb.Explorer.RewardChainLive'},
    {add_module,'Elixir.ArchethicWeb.Explorer.SettingsLive'},
    {add_module,'Elixir.ArchethicWeb.Explorer.TopNodeLive'},
    {add_module,'Elixir.ArchethicWeb.Explorer.TransactionBuilderLive'},
    {add_module,'Elixir.ArchethicWeb.Explorer.TransactionCache'},
    {add_module,'Elixir.ArchethicWeb.Explorer.TransactionChainLive'},
    {add_module,'Elixir.ArchethicWeb.Explorer.TransactionDetailsLive'},
    {add_module,'Elixir.ArchethicWeb.Explorer.UpController'},
    {add_module,'Elixir.ArchethicWeb.Explorer.WorldMapLive'},
    {add_module,'Elixir.ArchethicWeb.Explorer'},
    {add_module,'Elixir.ArchethicWeb.Plug.ThrottleByIPHigh'},
    {add_module,'Elixir.ArchethicWeb.Plug.ThrottleByIPLow'},
    {add_module,'Elixir.ArchethicWeb.Plug.ThrottleByIPandPath'},
    {add_module,'Elixir.ArchethicWeb.Plugs.ArchethicUp'},
    {update,'Elixir.Archethic.Account.MemTables.TokenLedger',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.Account.MemTables.UCOLedger',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.BeaconChain.Subset.StatsCollector',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.BeaconChain.SummaryTimer',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.BeaconChain.Update',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {load_module,'Elixir.Archethic.Cldr.Currency',brutal_purge,soft_purge,[]},
    {load_module,'Elixir.Archethic.Cldr.Number.Transliterate',brutal_purge,
                 soft_purge,[]},
    {update,'Elixir.Archethic.Contracts.TransactionLookup',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.Crypto.NodeKeystore.Origin.SoftwareImpl',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.Crypto.NodeKeystore.SoftwareImpl',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.Crypto.SharedSecretsKeystore.SoftwareImpl',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.DB.EmbeddedImpl.BootstrapInfo',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.DB.EmbeddedImpl.InputsWriter',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.DB.EmbeddedImpl.P2PView',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.DB.EmbeddedImpl.StatsInfo',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.DB.EmbeddedImpl.Supervisor',supervisor},
    {update,'Elixir.Archethic.Election.Constraints',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.Election.HypergeometricDistribution',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.Governance.Pools.MemTableLoader',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.Metrics.ETSFlush',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.Metrics.Poller',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {load_module,'Elixir.Archethic.Mining.PendingTransactionValidation',
                 brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.Networking.Scheduler',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.OracleChain.MemTable',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.OracleChain.Services.HydratingCache',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.P2P.BootstrappingSeeds',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.P2P.Client.Connection',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.P2P.GeoPatch.GeoIP.MaxMindDB',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.P2P.Listener',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.P2P.MemTable',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.Replication.TransactionPool',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.Reward.MemTables.RewardTokens',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.SelfRepair.NetworkView',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.SelfRepair.Notifier',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.SelfRepair.RepairWorker',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.SelfRepair.Scheduler',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.SharedSecrets.MemTables.NetworkLookup',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.SharedSecrets.MemTables.OriginKeyLookup',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.TransactionChain.MemTables.KOLedger',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.TransactionChain.MemTables.PendingLedger',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.Utils.DetectNodeResponsiveness',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.Utils.JobCache',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.Utils.JobConductor',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.Utils.PortHandler',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.Utils.Regression.Benchmark.SeedHolder',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {load_module,'Elixir.Archethic.Utils.Regression.Playbook',brutal_purge,
                 soft_purge,[]},
    {update,'Elixir.Archethic.Utils.WebSocket.SocketHandler',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.ArchethicCache.LRU',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {load_module,'Elixir.ArchethicWeb.AEWebRouter.Helpers',brutal_purge,
                 soft_purge,[]},
    {load_module,'Elixir.ArchethicWeb.AEWebRouter',brutal_purge,soft_purge,[]},
    {load_module,'Elixir.ArchethicWeb.ExplorerRouter.Helpers',brutal_purge,
                 soft_purge,[]},
    {load_module,'Elixir.ArchethicWeb.ExplorerRouter',brutal_purge,soft_purge,
                 []},
    {load_module,'Elixir.ArchethicWeb.RouterDispatch',brutal_purge,soft_purge,
                 []},
    {update,'Elixir.ArchethicWeb.Supervisor',supervisor},
    {update,'Elixir.ArchethicWeb.TransactionSubscriber',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {load_module,'Elixir.ArchethicWeb.UserSocket',brutal_purge,soft_purge,[]},
    {load_module,'Elixir.ArchethicWeb.WebUtils',brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.BeaconChain.SlotTimer',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic.BeaconChain.SummaryTimer']},
    {update,'Elixir.Archethic.BeaconChain.Subset.SummaryCache',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic.BeaconChain.SummaryTimer']},
    {update,'Elixir.Archethic.Contracts.Worker',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic.Utils.DetectNodeResponsiveness']},
    {update,'Elixir.Archethic.Crypto.Ed25519.LibSodiumPort',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic.Utils.PortHandler']},
    {update,'Elixir.Archethic.Crypto.NodeKeystore.Origin.TPMImpl',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic.Utils.PortHandler']},
    {update,'Elixir.Archethic.DB.EmbeddedImpl.ChainWriter',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic.DB.EmbeddedImpl.ChainIndex']},
    {update,'Elixir.Archethic.Mining.DistributedWorkflow',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic.Mining.PendingTransactionValidation']},
    {update,'Elixir.Archethic.Mining.StandaloneWorkflow',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic.Mining.PendingTransactionValidation']},
    {update,'Elixir.Archethic.OracleChain.MemTableLoader',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic.OracleChain.MemTable']},
    {update,'Elixir.Archethic.OracleChain.Scheduler',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic.Utils.DetectNodeResponsiveness']},
    {update,'Elixir.Archethic.P2P.MemTableLoader',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic.P2P.MemTable']},
    {update,'Elixir.Archethic.Reward.MemTablesLoader',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic.Reward.MemTables.RewardTokens']},
    {update,'Elixir.Archethic.Reward.Scheduler',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic.Utils.DetectNodeResponsiveness']},
    {update,'Elixir.Archethic.SharedSecrets.NodeRenewalScheduler',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic.Utils.DetectNodeResponsiveness']},
    {update,'Elixir.Archethic.TransactionChain.MemTablesLoader',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic.TransactionChain.MemTables.PendingLedger']},
    {load_module,'Elixir.ArchethicWeb.API.OriginKeyController',brutal_purge,
                 soft_purge,
                 ['Elixir.ArchethicWeb.TransactionSubscriber']},
    {load_module,'Elixir.ArchethicWeb.API.TransactionController',brutal_purge,
                 soft_purge,
                 ['Elixir.ArchethicWeb.TransactionSubscriber']},
    {load_module,'Elixir.ArchethicWeb.Endpoint',brutal_purge,soft_purge,
                 ['Elixir.ArchethicWeb.RouterDispatch']},
    {update,'Elixir.Archethic.Account.MemTablesLoader',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic.Account.MemTables.TokenLedger',
             'Elixir.Archethic.Account.MemTables.UCOLedger']},
    {update,'Elixir.Archethic.Contracts.Loader',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic.Contracts.TransactionLookup',
             'Elixir.Archethic.Contracts.Worker']},
    {update,'Elixir.Archethic.DB.EmbeddedImpl.ChainIndex',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic.DB.EmbeddedImpl.ChainWriter',
             'Elixir.ArchethicCache.LRU']},
    {update,'Elixir.Archethic.SharedSecrets.MemTablesLoader',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic.SharedSecrets.MemTables.NetworkLookup',
             'Elixir.Archethic.SharedSecrets.MemTables.OriginKeyLookup',
             'Elixir.Archethic.SharedSecrets.NodeRenewalScheduler']},
    {update,'Elixir.Archethic.BeaconChain.Subset',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic.BeaconChain.SlotTimer',
             'Elixir.Archethic.BeaconChain.Subset.StatsCollector',
             'Elixir.Archethic.BeaconChain.Subset.SummaryCache',
             'Elixir.Archethic.BeaconChain.SummaryTimer']},
    {apply,{supervisor,terminate_child,
                       ['Elixir.ArchethicWeb.Supervisor','Elixir.ArchethicWeb.TransactionCache']}},
    {apply,{supervisor,terminate_child,
                       ['Elixir.ArchethicWeb.Supervisor','Elixir.ArchethicWeb.FaucetRateLimiter']}},
    {apply,{supervisor,terminate_child,
                       ['Elixir.ArchethicWeb.Supervisor','Elixir.ArchethicWeb.ExplorerLive.TopTransactionsCache']}},
    {apply,{supervisor,delete_child,
                       ['Elixir.ArchethicWeb.Supervisor','Elixir.ArchethicWeb.TransactionCache']}},
    {apply,{supervisor,delete_child,
                       ['Elixir.ArchethicWeb.Supervisor','Elixir.ArchethicWeb.FaucetRateLimiter']}},
    {apply,{supervisor,delete_child,
                       ['Elixir.ArchethicWeb.Supervisor','Elixir.ArchethicWeb.ExplorerLive.TopTransactionsCache']}},
    {apply,{supervisor,restart_child,
                       ['Elixir.ArchethicWeb.Supervisor','Elixir.ArchethicWeb.Explorer.TransactionCache']}},
    {apply,{supervisor,restart_child,
                       ['Elixir.ArchethicWeb.Supervisor','Elixir.ArchethicWeb.Explorer.FaucetRateLimiter']}},
    {apply,{supervisor,restart_child,
                       ['Elixir.ArchethicWeb.Supervisor',
                       'Elixir.ArchethicWeb.Explorer.ExplorerLive.TopTransactionsCache']}},
    {delete_module,'Elixir.ArchethicWeb.AEWebRootController'},
    {delete_module,'Elixir.ArchethicWeb.API.WebHostingController.DirectoryListing'},
    {delete_module,'Elixir.ArchethicWeb.API.WebHostingController.ReferenceTransaction'},
    {delete_module,'Elixir.ArchethicWeb.API.WebHostingController.Resources'},
    {delete_module,'Elixir.ArchethicWeb.API.WebHostingController'},
    {delete_module,'Elixir.ArchethicWeb.BeaconChainLive'},
    {delete_module,'Elixir.ArchethicWeb.CodeController'},
    {delete_module,'Elixir.ArchethicWeb.CodeProposalChatLive'},
    {delete_module,'Elixir.ArchethicWeb.CodeProposalDetailsLive'},
    {delete_module,'Elixir.ArchethicWeb.CodeProposalsLive'},
    {delete_module,'Elixir.ArchethicWeb.CodeView'},
    {delete_module,'Elixir.ArchethicWeb.CodeViewerLive'},
    {delete_module,'Elixir.ArchethicWeb.DashboardLive'},
    {delete_module,'Elixir.ArchethicWeb.DashboardView'},
    {delete_module,'Elixir.ArchethicWeb.DirListingView'},
    {delete_module,'Elixir.ArchethicWeb.Domain'},
    {delete_module,'Elixir.ArchethicWeb.ErrorHelpers'},
    {delete_module,'Elixir.ArchethicWeb.ErrorView'},
    {delete_module,'Elixir.ArchethicWeb.ExplorerController'},
    {delete_module,'Elixir.ArchethicWeb.ExplorerIndexLive.TopTransactionsComponent'},
    {delete_module,'Elixir.ArchethicWeb.ExplorerIndexLive'},
    {delete_module,'Elixir.ArchethicWeb.ExplorerLive.TopTransactionsCache'},
    {delete_module,'Elixir.ArchethicWeb.ExplorerRootController'},
    {delete_module,'Elixir.ArchethicWeb.ExplorerView'},
    {delete_module,'Elixir.ArchethicWeb.FaucetController'},
    {delete_module,'Elixir.ArchethicWeb.FaucetRateLimiter'},
    {delete_module,'Elixir.ArchethicWeb.FaucetView'},
    {delete_module,'Elixir.ArchethicWeb.GraphQLContext'},
    {delete_module,'Elixir.ArchethicWeb.GraphQLSchema.AddressType'},
    {delete_module,'Elixir.ArchethicWeb.GraphQLSchema.BeaconChainSummary'},
    {delete_module,'Elixir.ArchethicWeb.GraphQLSchema.Compiled'},
    {delete_module,'Elixir.ArchethicWeb.GraphQLSchema.ContentType'},
    {delete_module,'Elixir.ArchethicWeb.GraphQLSchema.DateTimeType'},
    {delete_module,'Elixir.ArchethicWeb.GraphQLSchema.HashType'},
    {delete_module,'Elixir.ArchethicWeb.GraphQLSchema.HexType'},
    {delete_module,'Elixir.ArchethicWeb.GraphQLSchema.IntegerType'},
    {delete_module,'Elixir.ArchethicWeb.GraphQLSchema.OracleData'},
    {delete_module,'Elixir.ArchethicWeb.GraphQLSchema.P2PType'},
    {delete_module,'Elixir.ArchethicWeb.GraphQLSchema.PublicKeyType'},
    {delete_module,'Elixir.ArchethicWeb.GraphQLSchema.Resolver'},
    {delete_module,'Elixir.ArchethicWeb.GraphQLSchema.SharedSecretsType'},
    {delete_module,'Elixir.ArchethicWeb.GraphQLSchema.SortOrderEnum'},
    {delete_module,'Elixir.ArchethicWeb.GraphQLSchema.TransactionAttestation'},
    {delete_module,'Elixir.ArchethicWeb.GraphQLSchema.TransactionError'},
    {delete_module,'Elixir.ArchethicWeb.GraphQLSchema.TransactionType'},
    {delete_module,'Elixir.ArchethicWeb.GraphQLSchema.Version'},
    {delete_module,'Elixir.ArchethicWeb.GraphQLSchema'},
    {delete_module,'Elixir.ArchethicWeb.LayoutHelpers'},
    {delete_module,'Elixir.ArchethicWeb.LayoutView'},
    {delete_module,'Elixir.ArchethicWeb.MetricsController'},
    {delete_module,'Elixir.ArchethicWeb.NodeDetailsLive'},
    {delete_module,'Elixir.ArchethicWeb.NodeListLive'},
    {delete_module,'Elixir.ArchethicWeb.NodeSharedSecretsChainLive'},
    {delete_module,'Elixir.ArchethicWeb.NodeView'},
    {delete_module,'Elixir.ArchethicWeb.OracleChainLive'},
    {delete_module,'Elixir.ArchethicWeb.OriginChainLive'},
    {delete_module,'Elixir.ArchethicWeb.Pagination'},
    {delete_module,'Elixir.ArchethicWeb.PlugThrottleByIPHigh'},
    {delete_module,'Elixir.ArchethicWeb.PlugThrottleByIPLow'},
    {delete_module,'Elixir.ArchethicWeb.PlugThrottleByIPandPath'},
    {delete_module,'Elixir.ArchethicWeb.RewardChainLive'},
    {delete_module,'Elixir.ArchethicWeb.SettingsLive'},
    {delete_module,'Elixir.ArchethicWeb.TopNodeLive'},
    {delete_module,'Elixir.ArchethicWeb.TransactionBuilderLive'},
    {delete_module,'Elixir.ArchethicWeb.TransactionCache'},
    {delete_module,'Elixir.ArchethicWeb.TransactionChainLive'},
    {delete_module,'Elixir.ArchethicWeb.TransactionDetailsLive'},
    {delete_module,'Elixir.ArchethicWeb.UpController'},
    {delete_module,'Elixir.ArchethicWeb.WorldMapLive'},
    {delete_module,'Elixir.ArchethicWeb'},
    {apply,{supervisor,terminate_child,
                       ['Elixir.Archethic.Telemetry',prometheus_metrics]}},
    {apply,{supervisor,restart_child,
                       ['Elixir.Archethic.Telemetry',prometheus_metrics]}},
    {apply,{'Elixir.Mix.Tasks.Archethic.Migrate',run,["1.2.6",true]}}]}],
 [{"1.2.5",
   [{delete_module,'Elixir.ArchethicWeb.AEWeb.DirListingView'},
    {delete_module,'Elixir.ArchethicWeb.AEWeb.Domain'},
    {delete_module,'Elixir.ArchethicWeb.AEWeb.WebHostingController.DirectoryListing'},
    {delete_module,'Elixir.ArchethicWeb.AEWeb.WebHostingController.ReferenceTransaction'},
    {delete_module,'Elixir.ArchethicWeb.AEWeb.WebHostingController.Resources'},
    {delete_module,'Elixir.ArchethicWeb.AEWeb.WebHostingController'},
    {delete_module,'Elixir.ArchethicWeb.AEWeb'},
    {delete_module,'Elixir.ArchethicWeb.API.GraphQL.Context'},
    {delete_module,'Elixir.ArchethicWeb.API.GraphQL.Schema.AddressType'},
    {delete_module,'Elixir.ArchethicWeb.API.GraphQL.Schema.BeaconChainSummary'},
    {delete_module,'Elixir.ArchethicWeb.API.GraphQL.Schema.Compiled'},
    {delete_module,'Elixir.ArchethicWeb.API.GraphQL.Schema.ContentType'},
    {delete_module,'Elixir.ArchethicWeb.API.GraphQL.Schema.DateTimeType'},
    {delete_module,'Elixir.ArchethicWeb.API.GraphQL.Schema.HashType'},
    {delete_module,'Elixir.ArchethicWeb.API.GraphQL.Schema.HexType'},
    {delete_module,'Elixir.ArchethicWeb.API.GraphQL.Schema.IntegerType'},
    {delete_module,'Elixir.ArchethicWeb.API.GraphQL.Schema.OracleData'},
    {delete_module,'Elixir.ArchethicWeb.API.GraphQL.Schema.P2PType'},
    {delete_module,'Elixir.ArchethicWeb.API.GraphQL.Schema.PublicKeyType'},
    {delete_module,'Elixir.ArchethicWeb.API.GraphQL.Schema.Resolver'},
    {delete_module,'Elixir.ArchethicWeb.API.GraphQL.Schema.SharedSecretsType'},
    {delete_module,'Elixir.ArchethicWeb.API.GraphQL.Schema.SortOrderEnum'},
    {delete_module,'Elixir.ArchethicWeb.API.GraphQL.Schema.TransactionAttestation'},
    {delete_module,'Elixir.ArchethicWeb.API.GraphQL.Schema.TransactionError'},
    {delete_module,'Elixir.ArchethicWeb.API.GraphQL.Schema.TransactionType'},
    {delete_module,'Elixir.ArchethicWeb.API.GraphQL.Schema.Version'},
    {delete_module,'Elixir.ArchethicWeb.API.GraphQL.Schema'},
    {delete_module,'Elixir.ArchethicWeb.API'},
    {delete_module,'Elixir.ArchethicWeb.APIRouter.Helpers'},
    {delete_module,'Elixir.ArchethicWeb.APIRouter'},
    {delete_module,'Elixir.ArchethicWeb.DNSLinkRouter'},
    {delete_module,'Elixir.ArchethicWeb.Explorer.BeaconChainLive'},
    {delete_module,'Elixir.ArchethicWeb.Explorer.CodeController'},
    {delete_module,'Elixir.ArchethicWeb.Explorer.CodeProposalChatLive'},
    {delete_module,'Elixir.ArchethicWeb.Explorer.CodeProposalDetailsLive'},
    {delete_module,'Elixir.ArchethicWeb.Explorer.CodeProposalsLive'},
    {delete_module,'Elixir.ArchethicWeb.Explorer.CodeView'},
    {delete_module,'Elixir.ArchethicWeb.Explorer.CodeViewerLive'},
    {delete_module,'Elixir.ArchethicWeb.Explorer.DashboardLive'},
    {delete_module,'Elixir.ArchethicWeb.Explorer.DashboardView'},
    {delete_module,'Elixir.ArchethicWeb.Explorer.ErrorView'},
    {delete_module,'Elixir.ArchethicWeb.Explorer.ExplorerController'},
    {delete_module,'Elixir.ArchethicWeb.Explorer.ExplorerIndexLive.TopTransactionsComponent'},
    {delete_module,'Elixir.ArchethicWeb.Explorer.ExplorerIndexLive'},
    {delete_module,'Elixir.ArchethicWeb.Explorer.ExplorerLive.TopTransactionsCache'},
    {delete_module,'Elixir.ArchethicWeb.Explorer.ExplorerRootController'},
    {delete_module,'Elixir.ArchethicWeb.Explorer.ExplorerView'},
    {delete_module,'Elixir.ArchethicWeb.Explorer.FaucetController'},
    {delete_module,'Elixir.ArchethicWeb.Explorer.FaucetRateLimiter'},
    {delete_module,'Elixir.ArchethicWeb.Explorer.FaucetView'},
    {delete_module,'Elixir.ArchethicWeb.Explorer.LayoutView'},
    {delete_module,'Elixir.ArchethicWeb.Explorer.MetricsController'},
    {delete_module,'Elixir.ArchethicWeb.Explorer.NodeDetailsLive'},
    {delete_module,'Elixir.ArchethicWeb.Explorer.NodeListLive'},
    {delete_module,'Elixir.ArchethicWeb.Explorer.NodeSharedSecretsChainLive'},
    {delete_module,'Elixir.ArchethicWeb.Explorer.NodeView'},
    {delete_module,'Elixir.ArchethicWeb.Explorer.OracleChainLive'},
    {delete_module,'Elixir.ArchethicWeb.Explorer.OriginChainLive'},
    {delete_module,'Elixir.ArchethicWeb.Explorer.Pagination'},
    {delete_module,'Elixir.ArchethicWeb.Explorer.RewardChainLive'},
    {delete_module,'Elixir.ArchethicWeb.Explorer.SettingsLive'},
    {delete_module,'Elixir.ArchethicWeb.Explorer.TopNodeLive'},
    {delete_module,'Elixir.ArchethicWeb.Explorer.TransactionBuilderLive'},
    {delete_module,'Elixir.ArchethicWeb.Explorer.TransactionCache'},
    {delete_module,'Elixir.ArchethicWeb.Explorer.TransactionChainLive'},
    {delete_module,'Elixir.ArchethicWeb.Explorer.TransactionDetailsLive'},
    {delete_module,'Elixir.ArchethicWeb.Explorer.UpController'},
    {delete_module,'Elixir.ArchethicWeb.Explorer.WorldMapLive'},
    {delete_module,'Elixir.ArchethicWeb.Explorer'},
    {delete_module,'Elixir.ArchethicWeb.Plug.ThrottleByIPHigh'},
    {delete_module,'Elixir.ArchethicWeb.Plug.ThrottleByIPLow'},
    {delete_module,'Elixir.ArchethicWeb.Plug.ThrottleByIPandPath'},
    {delete_module,'Elixir.ArchethicWeb.Plugs.ArchethicUp'},
    {update,'Elixir.Archethic.Account.MemTables.TokenLedger',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.Account.MemTables.UCOLedger',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.BeaconChain.Subset.StatsCollector',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.BeaconChain.SummaryTimer',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.BeaconChain.Update',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {load_module,'Elixir.Archethic.Cldr.Currency',brutal_purge,soft_purge,[]},
    {load_module,'Elixir.Archethic.Cldr.Number.Transliterate',brutal_purge,
                 soft_purge,[]},
    {update,'Elixir.Archethic.Contracts.TransactionLookup',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.Crypto.NodeKeystore.Origin.SoftwareImpl',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.Crypto.NodeKeystore.SoftwareImpl',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.Crypto.SharedSecretsKeystore.SoftwareImpl',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.DB.EmbeddedImpl.BootstrapInfo',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.DB.EmbeddedImpl.InputsWriter',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.DB.EmbeddedImpl.P2PView',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.DB.EmbeddedImpl.StatsInfo',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.DB.EmbeddedImpl.Supervisor',supervisor},
    {update,'Elixir.Archethic.Election.Constraints',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.Election.HypergeometricDistribution',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.Governance.Pools.MemTableLoader',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.Metrics.ETSFlush',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.Metrics.Poller',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {load_module,'Elixir.Archethic.Mining.PendingTransactionValidation',
                 brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.Networking.Scheduler',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.OracleChain.MemTable',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.OracleChain.Services.HydratingCache',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.P2P.BootstrappingSeeds',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.P2P.Client.Connection',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.P2P.GeoPatch.GeoIP.MaxMindDB',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.P2P.Listener',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.P2P.MemTable',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.Replication.TransactionPool',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.Reward.MemTables.RewardTokens',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.SelfRepair.NetworkView',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.SelfRepair.Notifier',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.SelfRepair.RepairWorker',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.SelfRepair.Scheduler',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.SharedSecrets.MemTables.NetworkLookup',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.SharedSecrets.MemTables.OriginKeyLookup',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.TransactionChain.MemTables.KOLedger',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.TransactionChain.MemTables.PendingLedger',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.Utils.DetectNodeResponsiveness',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.Utils.JobCache',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.Utils.JobConductor',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.Utils.PortHandler',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.Utils.Regression.Benchmark.SeedHolder',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {load_module,'Elixir.Archethic.Utils.Regression.Playbook',brutal_purge,
                 soft_purge,[]},
    {update,'Elixir.Archethic.Utils.WebSocket.SocketHandler',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.ArchethicCache.LRU',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {load_module,'Elixir.ArchethicWeb.AEWebRouter.Helpers',brutal_purge,
                 soft_purge,[]},
    {load_module,'Elixir.ArchethicWeb.AEWebRouter',brutal_purge,soft_purge,[]},
    {load_module,'Elixir.ArchethicWeb.ExplorerRouter.Helpers',brutal_purge,
                 soft_purge,[]},
    {load_module,'Elixir.ArchethicWeb.ExplorerRouter',brutal_purge,soft_purge,
                 []},
    {load_module,'Elixir.ArchethicWeb.RouterDispatch',brutal_purge,soft_purge,
                 []},
    {update,'Elixir.ArchethicWeb.Supervisor',supervisor},
    {update,'Elixir.ArchethicWeb.TransactionSubscriber',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {load_module,'Elixir.ArchethicWeb.UserSocket',brutal_purge,soft_purge,[]},
    {load_module,'Elixir.ArchethicWeb.WebUtils',brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.BeaconChain.SlotTimer',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic.BeaconChain.SummaryTimer']},
    {update,'Elixir.Archethic.BeaconChain.Subset.SummaryCache',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic.BeaconChain.SummaryTimer']},
    {update,'Elixir.Archethic.Contracts.Worker',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic.Utils.DetectNodeResponsiveness']},
    {update,'Elixir.Archethic.Crypto.Ed25519.LibSodiumPort',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic.Utils.PortHandler']},
    {update,'Elixir.Archethic.Crypto.NodeKeystore.Origin.TPMImpl',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic.Utils.PortHandler']},
    {update,'Elixir.Archethic.DB.EmbeddedImpl.ChainWriter',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic.DB.EmbeddedImpl.ChainIndex']},
    {update,'Elixir.Archethic.Mining.DistributedWorkflow',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic.Mining.PendingTransactionValidation']},
    {update,'Elixir.Archethic.Mining.StandaloneWorkflow',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic.Mining.PendingTransactionValidation']},
    {update,'Elixir.Archethic.OracleChain.MemTableLoader',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic.OracleChain.MemTable']},
    {update,'Elixir.Archethic.OracleChain.Scheduler',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic.Utils.DetectNodeResponsiveness']},
    {update,'Elixir.Archethic.P2P.MemTableLoader',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic.P2P.MemTable']},
    {update,'Elixir.Archethic.Reward.MemTablesLoader',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic.Reward.MemTables.RewardTokens']},
    {update,'Elixir.Archethic.Reward.Scheduler',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic.Utils.DetectNodeResponsiveness']},
    {update,'Elixir.Archethic.SharedSecrets.NodeRenewalScheduler',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic.Utils.DetectNodeResponsiveness']},
    {update,'Elixir.Archethic.TransactionChain.MemTablesLoader',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic.TransactionChain.MemTables.PendingLedger']},
    {load_module,'Elixir.ArchethicWeb.API.OriginKeyController',brutal_purge,
                 soft_purge,
                 ['Elixir.ArchethicWeb.TransactionSubscriber']},
    {load_module,'Elixir.ArchethicWeb.API.TransactionController',brutal_purge,
                 soft_purge,
                 ['Elixir.ArchethicWeb.TransactionSubscriber']},
    {load_module,'Elixir.ArchethicWeb.Endpoint',brutal_purge,soft_purge,
                 ['Elixir.ArchethicWeb.RouterDispatch']},
    {update,'Elixir.Archethic.Account.MemTablesLoader',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic.Account.MemTables.TokenLedger',
             'Elixir.Archethic.Account.MemTables.UCOLedger']},
    {update,'Elixir.Archethic.Contracts.Loader',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic.Contracts.TransactionLookup',
             'Elixir.Archethic.Contracts.Worker']},
    {update,'Elixir.Archethic.DB.EmbeddedImpl.ChainIndex',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic.DB.EmbeddedImpl.ChainWriter',
             'Elixir.ArchethicCache.LRU']},
    {update,'Elixir.Archethic.SharedSecrets.MemTablesLoader',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic.SharedSecrets.MemTables.NetworkLookup',
             'Elixir.Archethic.SharedSecrets.MemTables.OriginKeyLookup',
             'Elixir.Archethic.SharedSecrets.NodeRenewalScheduler']},
    {update,'Elixir.Archethic.BeaconChain.Subset',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic.BeaconChain.SlotTimer',
             'Elixir.Archethic.BeaconChain.Subset.StatsCollector',
             'Elixir.Archethic.BeaconChain.Subset.SummaryCache',
             'Elixir.Archethic.BeaconChain.SummaryTimer']},
    {add_module,'Elixir.ArchethicWeb.AEWebRootController'},
    {add_module,'Elixir.ArchethicWeb.API.WebHostingController.DirectoryListing'},
    {add_module,'Elixir.ArchethicWeb.API.WebHostingController.ReferenceTransaction'},
    {add_module,'Elixir.ArchethicWeb.API.WebHostingController.Resources'},
    {add_module,'Elixir.ArchethicWeb.API.WebHostingController'},
    {add_module,'Elixir.ArchethicWeb.BeaconChainLive'},
    {add_module,'Elixir.ArchethicWeb.CodeController'},
    {add_module,'Elixir.ArchethicWeb.CodeProposalChatLive'},
    {add_module,'Elixir.ArchethicWeb.CodeProposalDetailsLive'},
    {add_module,'Elixir.ArchethicWeb.CodeProposalsLive'},
    {add_module,'Elixir.ArchethicWeb.CodeView'},
    {add_module,'Elixir.ArchethicWeb.CodeViewerLive'},
    {add_module,'Elixir.ArchethicWeb.DashboardLive'},
    {add_module,'Elixir.ArchethicWeb.DashboardView'},
    {add_module,'Elixir.ArchethicWeb.DirListingView'},
    {add_module,'Elixir.ArchethicWeb.Domain'},
    {add_module,'Elixir.ArchethicWeb.ErrorHelpers'},
    {add_module,'Elixir.ArchethicWeb.ErrorView'},
    {add_module,'Elixir.ArchethicWeb.ExplorerController'},
    {add_module,'Elixir.ArchethicWeb.ExplorerIndexLive.TopTransactionsComponent'},
    {add_module,'Elixir.ArchethicWeb.ExplorerIndexLive'},
    {add_module,'Elixir.ArchethicWeb.ExplorerLive.TopTransactionsCache'},
    {add_module,'Elixir.ArchethicWeb.ExplorerRootController'},
    {add_module,'Elixir.ArchethicWeb.ExplorerView'},
    {add_module,'Elixir.ArchethicWeb.FaucetController'},
    {add_module,'Elixir.ArchethicWeb.FaucetRateLimiter'},
    {add_module,'Elixir.ArchethicWeb.FaucetView'},
    {add_module,'Elixir.ArchethicWeb.GraphQLContext'},
    {add_module,'Elixir.ArchethicWeb.GraphQLSchema.AddressType'},
    {add_module,'Elixir.ArchethicWeb.GraphQLSchema.BeaconChainSummary'},
    {add_module,'Elixir.ArchethicWeb.GraphQLSchema.Compiled'},
    {add_module,'Elixir.ArchethicWeb.GraphQLSchema.ContentType'},
    {add_module,'Elixir.ArchethicWeb.GraphQLSchema.DateTimeType'},
    {add_module,'Elixir.ArchethicWeb.GraphQLSchema.HashType'},
    {add_module,'Elixir.ArchethicWeb.GraphQLSchema.HexType'},
    {add_module,'Elixir.ArchethicWeb.GraphQLSchema.IntegerType'},
    {add_module,'Elixir.ArchethicWeb.GraphQLSchema.OracleData'},
    {add_module,'Elixir.ArchethicWeb.GraphQLSchema.P2PType'},
    {add_module,'Elixir.ArchethicWeb.GraphQLSchema.PublicKeyType'},
    {add_module,'Elixir.ArchethicWeb.GraphQLSchema.Resolver'},
    {add_module,'Elixir.ArchethicWeb.GraphQLSchema.SharedSecretsType'},
    {add_module,'Elixir.ArchethicWeb.GraphQLSchema.SortOrderEnum'},
    {add_module,'Elixir.ArchethicWeb.GraphQLSchema.TransactionAttestation'},
    {add_module,'Elixir.ArchethicWeb.GraphQLSchema.TransactionError'},
    {add_module,'Elixir.ArchethicWeb.GraphQLSchema.TransactionType'},
    {add_module,'Elixir.ArchethicWeb.GraphQLSchema.Version'},
    {add_module,'Elixir.ArchethicWeb.GraphQLSchema'},
    {add_module,'Elixir.ArchethicWeb.LayoutHelpers'},
    {add_module,'Elixir.ArchethicWeb.LayoutView'},
    {add_module,'Elixir.ArchethicWeb.MetricsController'},
    {add_module,'Elixir.ArchethicWeb.NodeDetailsLive'},
    {add_module,'Elixir.ArchethicWeb.NodeListLive'},
    {add_module,'Elixir.ArchethicWeb.NodeSharedSecretsChainLive'},
    {add_module,'Elixir.ArchethicWeb.NodeView'},
    {add_module,'Elixir.ArchethicWeb.OracleChainLive'},
    {add_module,'Elixir.ArchethicWeb.OriginChainLive'},
    {add_module,'Elixir.ArchethicWeb.Pagination'},
    {add_module,'Elixir.ArchethicWeb.PlugThrottleByIPHigh'},
    {add_module,'Elixir.ArchethicWeb.PlugThrottleByIPLow'},
    {add_module,'Elixir.ArchethicWeb.PlugThrottleByIPandPath'},
    {add_module,'Elixir.ArchethicWeb.RewardChainLive'},
    {add_module,'Elixir.ArchethicWeb.SettingsLive'},
    {add_module,'Elixir.ArchethicWeb.TopNodeLive'},
    {add_module,'Elixir.ArchethicWeb.TransactionBuilderLive'},
    {add_module,'Elixir.ArchethicWeb.TransactionCache'},
    {add_module,'Elixir.ArchethicWeb.TransactionChainLive'},
    {add_module,'Elixir.ArchethicWeb.TransactionDetailsLive'},
    {add_module,'Elixir.ArchethicWeb.UpController'},
    {add_module,'Elixir.ArchethicWeb.WorldMapLive'},
    {add_module,'Elixir.ArchethicWeb'}]}]}.
