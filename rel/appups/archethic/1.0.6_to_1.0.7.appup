{"1.0.7",
 [{"1.0.6",
   [{add_module,'Elixir.Archethic.Cldr.AcceptLanguage'},
    {add_module,'Elixir.Archethic.Cldr.Currency'},
    {add_module,'Elixir.Archethic.Cldr.Locale'},
    {add_module,'Elixir.Archethic.Cldr.Number.Cardinal'},
    {add_module,'Elixir.Archethic.Cldr.Number.Format'},
    {add_module,'Elixir.Archethic.Cldr.Number.Formatter.Decimal'},
    {add_module,'Elixir.Archethic.Cldr.Number.Ordinal'},
    {add_module,'Elixir.Archethic.Cldr.Number.PluralRule.Range'},
    {add_module,'Elixir.Archethic.Cldr.Number.Symbol'},
    {add_module,'Elixir.Archethic.Cldr.Number.System'},
    {add_module,'Elixir.Archethic.Cldr.Number.Transliterate'},
    {add_module,'Elixir.Archethic.Cldr.Number'},
    {add_module,'Elixir.Archethic.Cldr.Rbnf.NumberSystem'},
    {add_module,'Elixir.Archethic.Cldr.Rbnf.Ordinal'},
    {add_module,'Elixir.Archethic.Cldr.Rbnf.Spellout'},
    {add_module,'Elixir.Archethic.Cldr'},
    {add_module,'Elixir.Archethic.OracleChain.Services.UCOPrice.Providers.CoinMarketCap'},
    {add_module,'Elixir.Archethic.OracleChain.Services.UCOPrice.Providers.CoinPaprika'},
    {add_module,'Elixir.Archethic.P2P.Message.GenesisAddress'},
    {add_module,'Elixir.Archethic.P2P.Message.GetGenesisAddress'},
    {add_module,'Elixir.Archethic.P2P.Message.NotifyReplicationValidation'},
    {add_module,'Elixir.Archethic.P2P.Message.ReplicatePendingTransactionChain'},
    {add_module,'Elixir.Archethic.P2P.Message.ValidateTransaction'},
    {add_module,'Elixir.Archethic.Replication.Supervisor'},
    {add_module,'Elixir.Archethic.Replication.TransactionPool'},
    {add_module,'Elixir.ArchethicCache.LRU'},
    {add_module,'Elixir.ArchethicCache.LRUDisk'},
    {add_module,'Elixir.ArchethicWeb.API.WebHostingController.DirectoryListing'},
    {add_module,'Elixir.ArchethicWeb.API.WebHostingController.ReferenceTransaction'},
    {add_module,'Elixir.ArchethicWeb.API.WebHostingController.Resources'},
    {add_module,'Elixir.ArchethicWeb.GraphQLSchema.BeaconChainSummary'},
    {add_module,'Elixir.ArchethicWeb.GraphQLSchema.SortOrderEnum'},
    {add_module,'Elixir.ArchethicWeb.Pagination'},
    {update,'Elixir.Archethic.BeaconChain.Update',{advanced,[]},[]},
    {load_module,'Elixir.Archethic.Contracts.ConditionInterpreter',[]},
    {update,'Elixir.Archethic.DB.EmbeddedImpl.BootstrapInfo',{advanced,[]},[]},
    {update,'Elixir.Archethic.DB.EmbeddedImpl.StatsInfo',{advanced,[]},[]},
    {update,'Elixir.Archethic.Election.Constraints',{advanced,[]},[]},
    {update,'Elixir.Archethic.Election.HypergeometricDistribution',
            {advanced,[]},
            []},
    {update,'Elixir.Archethic.Metrics.ETSFlush',{advanced,[]},[]},
    {load_module,'Elixir.Archethic.Metrics.Parser',[]},
    {update,'Elixir.Archethic.Metrics.Poller',{advanced,[]},[]},
    {load_module,'Elixir.Archethic.Networking.IPLookup.NATDiscovery.MiniUPNP',
                 []},
    {load_module,'Elixir.Archethic.Networking.PortForwarding',[]},
    {update,'Elixir.Archethic.OracleChain.MemTable',{advanced,[]},[]},
    {load_module,'Elixir.Archethic.OracleChain.Services.UCOPrice.Providers.Coingecko',
                 []},
    {update,'Elixir.Archethic.P2P.GeoPatch.GeoIP.MaxMindDB',{advanced,[]},[]},
    {update,'Elixir.Archethic.P2P.Listener',{advanced,[]},[]},
    {update,'Elixir.Archethic.P2P.MemTable',{advanced,[]},[]},
    {load_module,'Elixir.Archethic.P2P.Message.AcknowledgeStorage',[]},
    {update,'Elixir.Archethic.Reward.MemTables.RewardTokens',{advanced,[]},[]},
    {update,'Elixir.Archethic.SharedSecrets.MemTables.NetworkLookup',
            {advanced,[]},
            []},
    {update,'Elixir.Archethic.SharedSecrets.MemTables.OriginKeyLookup',
            {advanced,[]},
            []},
    {update,'Elixir.Archethic.Telemetry',supervisor},
    {update,'Elixir.Archethic.TransactionChain.MemTables.KOLedger',
            {advanced,[]},
            []},
    {update,'Elixir.Archethic.TransactionChain.MemTables.PendingLedger',
            {advanced,[]},
            []},
    {update,'Elixir.Archethic.Utils.JobCache',{advanced,[]},[]},
    {update,'Elixir.Archethic.Utils.JobConductor',{advanced,[]},[]},
    {update,'Elixir.Archethic.Utils.PortHandler',{advanced,[]},[]},
    {update,'Elixir.Archethic.Utils.Regression.Benchmark.SeedHolder',
            {advanced,[]},
            []},
    {load_module,'Elixir.Archethic.Utils',[]},
    {load_module,'Elixir.ArchethicWeb.API.Schema.Ownership',[]},
    {load_module,'Elixir.ArchethicWeb.API.Types.TransactionType',[]},
    {load_module,'Elixir.ArchethicWeb.API.WebHostingController',[]},
    {load_module,'Elixir.ArchethicWeb.Domain',[]},
    {update,'Elixir.ArchethicWeb.ExplorerLive.TopTransactionsCache',
            {advanced,[]},
            []},
    {load_module,'Elixir.ArchethicWeb.ExplorerRootController',[]},
    {load_module,'Elixir.ArchethicWeb.GraphQLSchema.Compiled',[]},
    {update,'Elixir.ArchethicWeb.Supervisor',supervisor},
    {update,'Elixir.ArchethicWeb.TransactionCache',{advanced,[]},[]},
    {load_module,'Elixir.ArchethicWeb.UpController',[]},
    {update,'Elixir.Archethic.Account.MemTables.TokenLedger',
            {advanced,[]},
            ['Elixir.Archethic.DB']},
    {update,'Elixir.Archethic.Account.MemTables.UCOLedger',
            {advanced,[]},
            ['Elixir.Archethic.DB']},
    {load_module,'Elixir.Archethic.BeaconChain.SummaryAggregate',
                 ['Elixir.Archethic.Utils']},
    {update,'Elixir.Archethic.BeaconChain.SummaryTimer',
            {advanced,[]},
            ['Elixir.Archethic.Utils']},
    {load_module,'Elixir.Archethic.Contracts.Interpreter.Library',
                 ['Elixir.Archethic.Election']},
    {update,'Elixir.Archethic.Contracts.TransactionLookup',
            {advanced,[]},
            ['Elixir.Archethic.DB']},
    {update,'Elixir.Archethic.Crypto.Ed25519.LibSodiumPort',
            {advanced,[]},
            ['Elixir.Archethic.Utils.PortHandler']},
    {update,'Elixir.Archethic.Crypto.NodeKeystore.Origin.SoftwareImpl',
            {advanced,[]},
            ['Elixir.Archethic.Utils']},
    {update,'Elixir.Archethic.Crypto.NodeKeystore.Origin.TPMImpl',
            {advanced,[]},
            ['Elixir.Archethic.Utils.PortHandler']},
    {update,'Elixir.Archethic.Crypto.NodeKeystore.SoftwareImpl',
            {advanced,[]},
            ['Elixir.Archethic.Utils']},
    {update,'Elixir.Archethic.DB.EmbeddedImpl.P2PView',
            {advanced,[]},
            ['Elixir.Archethic.Utils']},
    {load_module,'Elixir.Archethic.OracleChain.Services.UCOPrice',
                 ['Elixir.Archethic.Utils']},
    {update,'Elixir.Archethic.P2P.BootstrappingSeeds',
            {advanced,[]},
            ['Elixir.Archethic.DB']},
    {load_module,'Elixir.Archethic.TransactionChain.Transaction',
                 ['Elixir.Archethic.Utils']},
    {update,'Elixir.Archethic.DB.EmbeddedImpl.InputsWriter',
            {advanced,[]},
            ['Elixir.Archethic.DB.EmbeddedImpl','Elixir.Archethic.Utils']},
    {update,'Elixir.Archethic.SelfRepair.Scheduler',
            {advanced,[]},
            ['Elixir.Archethic.SelfRepair.Sync','Elixir.Archethic.Utils']},
    {load_module,'Elixir.Archethic.Utils.Regression.Benchmark.P2PMessage.Connection',
                 ['Elixir.Archethic.P2P.Message',
                  'Elixir.Archethic.P2P.MessageEnvelop',
                  'Elixir.Archethic.Utils']},
    {load_module,'Elixir.Archethic.Utils.Regression.Benchmark.P2PMessage',
                 ['Elixir.Archethic.Utils.Regression.Benchmark.P2PMessage.Connection']},
    {update,'Elixir.Archethic.OracleChain.MemTableLoader',
            {advanced,[]},
            ['Elixir.Archethic.OracleChain.MemTable',
             'Elixir.Archethic.TransactionChain']},
    {load_module,'Elixir.Archethic.P2P.ListenerProtocol',
                 ['Elixir.Archethic.P2P.Message',
                  'Elixir.Archethic.P2P.MessageEnvelop',
                  'Elixir.Archethic.Utils']},
    {update,'Elixir.Archethic.P2P.Client.Connection',
            {advanced,[]},
            ['Elixir.Archethic.P2P.MemTable','Elixir.Archethic.P2P.Message',
             'Elixir.Archethic.P2P.MessageEnvelop','Elixir.Archethic.Utils']},
    {update,'Elixir.Archethic.P2P.MemTableLoader',
            {advanced,[]},
            ['Elixir.Archethic.DB','Elixir.Archethic.P2P.MemTable',
             'Elixir.Archethic.TransactionChain','Elixir.Archethic.Utils']},
    {load_module,'Elixir.Archethic.Mining.PendingTransactionValidation',
                 ['Elixir.Archethic.DB','Elixir.Archethic.Election',
                  'Elixir.Archethic.TransactionChain',
                  'Elixir.Archethic.TransactionChain.Transaction',
                  'Elixir.Archethic.Utils']},
    {update,'Elixir.Archethic.Mining.StandaloneWorkflow',
            {advanced,[]},
            ['Elixir.Archethic.BeaconChain','Elixir.Archethic.Election',
             'Elixir.Archethic.Mining.PendingTransactionValidation',
             'Elixir.Archethic.Mining.ValidationContext',
             'Elixir.Archethic.P2P.Message',
             'Elixir.Archethic.TransactionChain',
             'Elixir.Archethic.TransactionChain.Transaction']},
    {update,'Elixir.Archethic.OracleChain.Scheduler',
            {advanced,[]},
            ['Elixir.Archethic','Elixir.Archethic.Bootstrap',
             'Elixir.Archethic.Election','Elixir.Archethic.TransactionChain',
             'Elixir.Archethic.TransactionChain.Transaction',
             'Elixir.Archethic.Utils',
             'Elixir.Archethic.Utils.DetectNodeResponsiveness']},
    {load_module,'Elixir.Archethic.P2P.Message',
                 ['Elixir.Archethic','Elixir.Archethic.BeaconChain',
                  'Elixir.Archethic.BeaconChain.Subset',
                  'Elixir.Archethic.BeaconChain.Summary',
                  'Elixir.Archethic.BeaconChain.SummaryAggregate',
                  'Elixir.Archethic.Election','Elixir.Archethic.Mining',
                  'Elixir.Archethic.Replication',
                  'Elixir.Archethic.TransactionChain',
                  'Elixir.Archethic.TransactionChain.Transaction',
                  'Elixir.Archethic.Utils',
                  'Elixir.ArchethicWeb.TransactionSubscriber']},
    {load_module,'Elixir.Archethic.P2P.MessageEnvelop',
                 ['Elixir.Archethic.P2P.Message','Elixir.Archethic.Utils']},
    {update,'Elixir.Archethic.TransactionChain.MemTablesLoader',
            {advanced,[]},
            ['Elixir.Archethic.DB',
             'Elixir.Archethic.TransactionChain.MemTables.PendingLedger']},
    {load_module,'Elixir.Archethic.TransactionChain',
                 ['Elixir.Archethic.DB','Elixir.Archethic.Election',
                  'Elixir.Archethic.P2P.Message',
                  'Elixir.Archethic.TransactionChain.MemTables.KOLedger',
                  'Elixir.Archethic.TransactionChain.MemTables.PendingLedger',
                  'Elixir.Archethic.TransactionChain.MemTablesLoader',
                  'Elixir.Archethic.TransactionChain.Transaction']},
    {update,'Elixir.Archethic.Reward.MemTablesLoader',
            {advanced,[]},
            ['Elixir.Archethic.Reward.MemTables.RewardTokens',
             'Elixir.Archethic.TransactionChain']},
    {update,'Elixir.Archethic.Utils.DetectNodeResponsiveness',
            {advanced,[]},
            ['Elixir.Archethic.Mining','Elixir.Archethic.TransactionChain']},
    {load_module,'Elixir.Archethic.Replication.TransactionContext',
                 ['Elixir.Archethic.Election',
                  'Elixir.Archethic.TransactionChain',
                  'Elixir.Archethic.TransactionChain.Transaction']},
    {update,'Elixir.Archethic.SelfRepair.RepairWorker',
            {advanced,[]},
            ['Elixir.Archethic.BeaconChain','Elixir.Archethic.Election',
             'Elixir.Archethic.Replication',
             'Elixir.Archethic.TransactionChain']},
    {update,'Elixir.Archethic.SelfRepair.Notifier',
            {advanced,[]},
            ['Elixir.Archethic.BeaconChain','Elixir.Archethic.Election',
             'Elixir.Archethic.TransactionChain',
             'Elixir.Archethic.TransactionChain.Transaction',
             'Elixir.Archethic.Utils']},
    {update,'Elixir.Archethic.SharedSecrets.NodeRenewalScheduler',
            {advanced,[]},
            ['Elixir.Archethic','Elixir.Archethic.Bootstrap',
             'Elixir.Archethic.Election','Elixir.Archethic.Utils',
             'Elixir.Archethic.Utils.DetectNodeResponsiveness']},
    {update,'Elixir.Archethic.SharedSecrets.MemTablesLoader',
            {advanced,[]},
            ['Elixir.Archethic.SharedSecrets.MemTables.NetworkLookup',
             'Elixir.Archethic.SharedSecrets.MemTables.OriginKeyLookup',
             'Elixir.Archethic.SharedSecrets.NodeRenewalScheduler',
             'Elixir.Archethic.TransactionChain','Elixir.Archethic.Utils']},
    {load_module,'Elixir.Archethic.Replication',
                 ['Elixir.Archethic.Election','Elixir.Archethic.P2P.Message',
                  'Elixir.Archethic.Replication.TransactionContext',
                  'Elixir.Archethic.TransactionChain',
                  'Elixir.Archethic.TransactionChain.Transaction',
                  'Elixir.Archethic.Utils']},
    {update,'Elixir.Archethic.Reward.Scheduler',
            {advanced,[]},
            ['Elixir.Archethic','Elixir.Archethic.Bootstrap',
             'Elixir.Archethic.DB','Elixir.Archethic.Election',
             'Elixir.Archethic.Utils',
             'Elixir.Archethic.Utils.DetectNodeResponsiveness']},
    {update,'Elixir.Archethic.Mining.DistributedWorkflow',
            {advanced,[]},
            ['Elixir.Archethic.BeaconChain','Elixir.Archethic.Election',
             'Elixir.Archethic.Mining.PendingTransactionValidation',
             'Elixir.Archethic.Mining.ValidationContext',
             'Elixir.Archethic.P2P.Message',
             'Elixir.Archethic.TransactionChain',
             'Elixir.Archethic.TransactionChain.Transaction',
             'Elixir.Archethic.Utils']},
    {load_module,'Elixir.Archethic.Mining',
                 ['Elixir.Archethic.Election',
                  'Elixir.Archethic.Mining.DistributedWorkflow',
                  'Elixir.Archethic.Mining.PendingTransactionValidation',
                  'Elixir.Archethic.Mining.StandaloneWorkflow']},
    {update,'Elixir.Archethic.Networking.Scheduler',
            {advanced,[]},
            ['Elixir.Archethic','Elixir.Archethic.Networking.PortForwarding',
             'Elixir.Archethic.TransactionChain',
             'Elixir.Archethic.TransactionChain.Transaction',
             'Elixir.Archethic.Utils']},
    {load_module,'Elixir.Archethic.Mining.ValidationContext',
                 ['Elixir.Archethic.Election','Elixir.Archethic.Mining',
                  'Elixir.Archethic.Replication',
                  'Elixir.Archethic.TransactionChain',
                  'Elixir.Archethic.TransactionChain.Transaction',
                  'Elixir.Archethic.Utils']},
    {load_module,'Elixir.Archethic.SelfRepair.Sync',
                 ['Elixir.Archethic.BeaconChain',
                  'Elixir.Archethic.BeaconChain.SummaryAggregate',
                  'Elixir.Archethic.Bootstrap','Elixir.Archethic.DB',
                  'Elixir.Archethic.Election','Elixir.Archethic.P2P.Message',
                  'Elixir.Archethic.TransactionChain',
                  'Elixir.Archethic.Utils']},
    {load_module,'Elixir.Archethic.DB.EmbeddedImpl',
                 ['Elixir.Archethic.DB.EmbeddedImpl.BootstrapInfo',
                  'Elixir.Archethic.DB.EmbeddedImpl.ChainIndex',
                  'Elixir.Archethic.DB.EmbeddedImpl.ChainReader',
                  'Elixir.Archethic.DB.EmbeddedImpl.ChainWriter',
                  'Elixir.Archethic.DB.EmbeddedImpl.InputsWriter',
                  'Elixir.Archethic.DB.EmbeddedImpl.P2PView',
                  'Elixir.Archethic.DB.EmbeddedImpl.StatsInfo',
                  'Elixir.Archethic.TransactionChain.Transaction',
                  'Elixir.Archethic.Utils']},
    {load_module,'Elixir.Archethic.DB',['Elixir.Archethic.DB.EmbeddedImpl']},
    {update,'Elixir.Archethic.Governance.Pools.MemTableLoader',
            {advanced,[]},
            ['Elixir.Archethic.TransactionChain']},
    {load_module,'Elixir.ArchethicWeb.AEWebRootController',
                 ['Elixir.ArchethicWeb.API.WebHostingController']},
    {load_module,'Elixir.ArchethicWeb.API.TransactionPayload',
                 ['Elixir.Archethic.Utils']},
    {load_module,'Elixir.ArchethicWeb.Endpoint',
                 ['Elixir.Archethic.Bootstrap']},
    {load_module,'Elixir.Archethic',
                 ['Elixir.Archethic.BeaconChain','Elixir.Archethic.Election',
                  'Elixir.Archethic.TransactionChain']},
    {update,'Elixir.ArchethicWeb.FaucetRateLimiter',
            {advanced,[]},
            ['Elixir.Archethic']},
    {load_module,'Elixir.ArchethicWeb.ExplorerIndexLive.TopTransactionsComponent',
                 ['Elixir.Archethic',
                  'Elixir.ArchethicWeb.ExplorerLive.TopTransactionsCache']},
    {load_module,'Elixir.ArchethicWeb.BeaconChainLive',
                 ['Elixir.Archethic','Elixir.Archethic.BeaconChain',
                  'Elixir.ArchethicWeb.TransactionCache']},
    {load_module,'Elixir.ArchethicWeb.API.OriginKeyController',
                 ['Elixir.Archethic','Elixir.Archethic.TransactionChain',
                  'Elixir.Archethic.TransactionChain.Transaction',
                  'Elixir.ArchethicWeb.TransactionSubscriber']},
    {load_module,'Elixir.ArchethicWeb.API.TransactionController',
                 ['Elixir.Archethic','Elixir.Archethic.Mining',
                  'Elixir.Archethic.TransactionChain.Transaction',
                  'Elixir.ArchethicWeb.API.TransactionPayload',
                  'Elixir.ArchethicWeb.TransactionSubscriber']},
    {load_module,'Elixir.ArchethicWeb.GraphQLSchema.Resolver',
                 ['Elixir.Archethic','Elixir.Archethic.BeaconChain',
                  'Elixir.Archethic.BeaconChain.SummaryAggregate',
                  'Elixir.Archethic.Mining',
                  'Elixir.Archethic.TransactionChain',
                  'Elixir.Archethic.TransactionChain.Transaction']},
    {load_module,'Elixir.ArchethicWeb.GraphQLSchema',
                 ['Elixir.ArchethicWeb.GraphQLSchema.Resolver']},
    {load_module,'Elixir.ArchethicWeb.NodeSharedSecretsChainLive',
                 ['Elixir.Archethic.TransactionChain']},
    {load_module,'Elixir.ArchethicWeb.OracleChainLive',
                 ['Elixir.Archethic.TransactionChain']},
    {load_module,'Elixir.ArchethicWeb.RewardChainLive',
                 ['Elixir.Archethic.TransactionChain']},
    {load_module,'Elixir.ArchethicWeb.TransactionChainLive',
                 ['Elixir.Archethic']},
    {update,'Elixir.ArchethicWeb.TransactionSubscriber',
            {advanced,[]},
            ['Elixir.Archethic.Election']},
    {load_module,'Elixir.ArchethicWeb.UserSocket',
                 ['Elixir.Archethic.Bootstrap']},
    {update,'Elixir.Archethic.Crypto.SharedSecretsKeystore.SoftwareImpl',
            {advanced,[]},
            ['Elixir.Archethic.DB','Elixir.Archethic.TransactionChain']},
    {update,'Elixir.Archethic.DB.EmbeddedImpl.ChainIndex',
            {advanced,[]},
            ['Elixir.Archethic.DB.EmbeddedImpl.ChainWriter',
             'Elixir.Archethic.TransactionChain.Transaction']},
    {update,'Elixir.Archethic.Account.MemTablesLoader',
            {advanced,[]},
            ['Elixir.Archethic.Account.MemTables.TokenLedger',
             'Elixir.Archethic.Account.MemTables.UCOLedger',
             'Elixir.Archethic.TransactionChain']},
    {load_module,'Elixir.Archethic.Application',
                 ['Elixir.Archethic.BeaconChain','Elixir.Archethic.Utils',
                  'Elixir.ArchethicWeb.Endpoint']},
    {update,'Elixir.Archethic.DB.EmbeddedImpl.ChainWriter',
            {advanced,[]},
            ['Elixir.Archethic.BeaconChain.Summary',
             'Elixir.Archethic.BeaconChain.SummaryAggregate',
             'Elixir.Archethic.DB.EmbeddedImpl.ChainIndex',
             'Elixir.Archethic.Utils']},
    {update,'Elixir.Archethic.BeaconChain.SlotTimer',
            {advanced,[]},
            ['Elixir.Archethic.BeaconChain',
             'Elixir.Archethic.BeaconChain.SummaryTimer',
             'Elixir.Archethic.Bootstrap','Elixir.Archethic.DB',
             'Elixir.Archethic.Utils']},
    {load_module,'Elixir.Archethic.BeaconChain.Summary',
                 ['Elixir.Archethic.BeaconChain.SlotTimer',
                  'Elixir.Archethic.Utils']},
    {update,'Elixir.Archethic.BeaconChain.Subset.SummaryCache',
            {advanced,[]},
            ['Elixir.Archethic.BeaconChain.SummaryTimer',
             'Elixir.Archethic.Utils']},
    {load_module,'Elixir.ArchethicWeb.ExplorerView',
                 ['Elixir.Archethic.BeaconChain.Summary',
                  'Elixir.Archethic.Utils']},
    {load_module,'Elixir.ArchethicWeb.GraphQLSchema.TransactionType',
                 ['Elixir.Archethic.TransactionChain.Transaction',
                  'Elixir.ArchethicWeb.GraphQLSchema.Resolver']},
    {load_module,'Elixir.Archethic.Bootstrap',
                 ['Elixir.Archethic.P2P.Listener',
                  'Elixir.Archethic.Replication',
                  'Elixir.Archethic.TransactionChain']},
    {load_module,'Elixir.Archethic.Election',
                 ['Elixir.Archethic.Election.Constraints',
                  'Elixir.Archethic.TransactionChain.Transaction',
                  'Elixir.Archethic.Utils']},
    {update,'Elixir.Archethic.BeaconChain.Subset',
            {advanced,[]},
            ['Elixir.Archethic.BeaconChain',
             'Elixir.Archethic.BeaconChain.SlotTimer',
             'Elixir.Archethic.BeaconChain.Subset.SummaryCache',
             'Elixir.Archethic.BeaconChain.Summary',
             'Elixir.Archethic.BeaconChain.SummaryTimer',
             'Elixir.Archethic.Election','Elixir.Archethic.Utils']},
    {update,'Elixir.Archethic.Contracts.Worker',
            {advanced,[]},
            ['Elixir.Archethic',
             'Elixir.Archethic.Contracts.ConditionInterpreter',
             'Elixir.Archethic.Election','Elixir.Archethic.Mining',
             'Elixir.Archethic.TransactionChain',
             'Elixir.Archethic.TransactionChain.Transaction',
             'Elixir.Archethic.Utils',
             'Elixir.Archethic.Utils.DetectNodeResponsiveness']},
    {update,'Elixir.Archethic.Contracts.Loader',
            {advanced,[]},
            ['Elixir.Archethic.Contracts.TransactionLookup',
             'Elixir.Archethic.Contracts.Worker','Elixir.Archethic.DB',
             'Elixir.Archethic.TransactionChain',
             'Elixir.Archethic.TransactionChain.Transaction']},
    {load_module,'Elixir.ArchethicWeb.FaucetController',
                 ['Elixir.Archethic',
                  'Elixir.Archethic.TransactionChain.Transaction',
                  'Elixir.Archethic.Utils',
                  'Elixir.ArchethicWeb.FaucetRateLimiter',
                  'Elixir.ArchethicWeb.TransactionSubscriber']},
    {load_module,'Elixir.Archethic.DB.EmbeddedImpl.ChainReader',
                 ['Elixir.Archethic.BeaconChain.Summary',
                  'Elixir.Archethic.BeaconChain.SummaryAggregate',
                  'Elixir.Archethic.DB.EmbeddedImpl.ChainIndex',
                  'Elixir.Archethic.DB.EmbeddedImpl.ChainWriter',
                  'Elixir.Archethic.TransactionChain.Transaction',
                  'Elixir.Archethic.Utils']},
    {load_module,'Elixir.ArchethicWeb.ExplorerRouter',
                 ['Elixir.ArchethicWeb.API.OriginKeyController',
                  'Elixir.ArchethicWeb.API.TransactionController',
                  'Elixir.ArchethicWeb.API.WebHostingController',
                  'Elixir.ArchethicWeb.ExplorerRootController',
                  'Elixir.ArchethicWeb.FaucetController',
                  'Elixir.ArchethicWeb.UpController']},
    {load_module,'Elixir.Archethic.BeaconChain',
                 ['Elixir.Archethic.BeaconChain.SlotTimer',
                  'Elixir.Archethic.BeaconChain.Subset',
                  'Elixir.Archethic.BeaconChain.Subset.SummaryCache',
                  'Elixir.Archethic.BeaconChain.SummaryAggregate',
                  'Elixir.Archethic.BeaconChain.SummaryTimer',
                  'Elixir.Archethic.BeaconChain.Update','Elixir.Archethic.DB',
                  'Elixir.Archethic.Election','Elixir.Archethic.Utils']},
		{apply,{supervisor, restart_child,
						 ['Elixir.ArchethicWeb.Supervisor', web_hosting_cache_ref_tx]}},
		{apply,{supervisor, restart_child,
						 ['Elixir.ArchethicWeb.Supervisor', web_hosting_cache_file]}},
		{apply,{supervisor, start_child, [
			'Elixir.Archethic.Supervisor',
			#{
				id => 'Elixir.Archethic.Replication.Supervisor',
				start => {'Elixir.Archethic.Replication.Supervisor', start_link, [[]]},
				type => supervisor
			}
		]}},
    {delete_module,'Elixir.Archethic.P2P.Message.FirstAddress'},
    {delete_module,'Elixir.Archethic.P2P.Message.GetFirstAddress'}]}],
 [{"1.0.6",
   [{delete_module,'Elixir.Archethic.Cldr.AcceptLanguage'},
    {delete_module,'Elixir.Archethic.Cldr.Currency'},
    {delete_module,'Elixir.Archethic.Cldr.Locale'},
    {delete_module,'Elixir.Archethic.Cldr.Number.Cardinal'},
    {delete_module,'Elixir.Archethic.Cldr.Number.Format'},
    {delete_module,'Elixir.Archethic.Cldr.Number.Formatter.Decimal'},
    {delete_module,'Elixir.Archethic.Cldr.Number.Ordinal'},
    {delete_module,'Elixir.Archethic.Cldr.Number.PluralRule.Range'},
    {delete_module,'Elixir.Archethic.Cldr.Number.Symbol'},
    {delete_module,'Elixir.Archethic.Cldr.Number.System'},
    {delete_module,'Elixir.Archethic.Cldr.Number.Transliterate'},
    {delete_module,'Elixir.Archethic.Cldr.Number'},
    {delete_module,'Elixir.Archethic.Cldr.Rbnf.NumberSystem'},
    {delete_module,'Elixir.Archethic.Cldr.Rbnf.Ordinal'},
    {delete_module,'Elixir.Archethic.Cldr.Rbnf.Spellout'},
    {delete_module,'Elixir.Archethic.Cldr'},
    {delete_module,'Elixir.Archethic.OracleChain.Services.UCOPrice.Providers.CoinMarketCap'},
    {delete_module,'Elixir.Archethic.OracleChain.Services.UCOPrice.Providers.CoinPaprika'},
    {delete_module,'Elixir.Archethic.P2P.Message.GenesisAddress'},
    {delete_module,'Elixir.Archethic.P2P.Message.GetGenesisAddress'},
    {delete_module,'Elixir.Archethic.P2P.Message.NotifyReplicationValidation'},
    {delete_module,'Elixir.Archethic.P2P.Message.ReplicatePendingTransactionChain'},
    {delete_module,'Elixir.Archethic.P2P.Message.ValidateTransaction'},
    {delete_module,'Elixir.Archethic.Replication.Supervisor'},
    {delete_module,'Elixir.Archethic.Replication.TransactionPool'},
    {delete_module,'Elixir.ArchethicCache.LRU'},
    {delete_module,'Elixir.ArchethicCache.LRUDisk'},
    {delete_module,'Elixir.ArchethicWeb.API.WebHostingController.DirectoryListing'},
    {delete_module,'Elixir.ArchethicWeb.API.WebHostingController.ReferenceTransaction'},
    {delete_module,'Elixir.ArchethicWeb.API.WebHostingController.Resources'},
    {delete_module,'Elixir.ArchethicWeb.GraphQLSchema.BeaconChainSummary'},
    {delete_module,'Elixir.ArchethicWeb.GraphQLSchema.SortOrderEnum'},
    {delete_module,'Elixir.ArchethicWeb.Pagination'},
		{apply, {supervisor, terminate_child,
							['Elixir.ArchethicWeb.Supervisor', web_hosting_cache_ref_tx]}},
    {apply, {supervisor, delete_child,
							['Elixir.ArchethicWeb.Supervisor', web_hosting_cache_ref_tx]}},
		{apply, {supervisor, terminate_child,
							['Elixir.ArchethicWeb.Supervisor', web_hosting_cache_file]}},
    {apply, {supervisor, delete_child,
							['Elixir.ArchethicWeb.Supervisor', web_hosting_cache_ref_tx]}},
		{apply, {supervisor, terminate_child,
							['Elixir.Archethic.Supervisor', 'Elixir.Archethic.Replication.Supervisor']}},
    {apply, {supervisor, delete_child,
							['Elixir.Archethic.Supervisor', 'Elixir.Archethic.Replication.Supervisor']}},
    {update,'Elixir.Archethic.BeaconChain.Update',{advanced,[]},[]},
    {load_module,'Elixir.Archethic.Contracts.ConditionInterpreter',[]},
    {update,'Elixir.Archethic.DB.EmbeddedImpl.BootstrapInfo',{advanced,[]},[]},
    {update,'Elixir.Archethic.DB.EmbeddedImpl.StatsInfo',{advanced,[]},[]},
    {update,'Elixir.Archethic.Election.Constraints',{advanced,[]},[]},
    {update,'Elixir.Archethic.Election.HypergeometricDistribution',
            {advanced,[]},
            []},
    {update,'Elixir.Archethic.Metrics.ETSFlush',{advanced,[]},[]},
    {load_module,'Elixir.Archethic.Metrics.Parser',[]},
    {update,'Elixir.Archethic.Metrics.Poller',{advanced,[]},[]},
    {load_module,'Elixir.Archethic.Networking.IPLookup.NATDiscovery.MiniUPNP',
                 []},
    {load_module,'Elixir.Archethic.Networking.PortForwarding',[]},
    {update,'Elixir.Archethic.OracleChain.MemTable',{advanced,[]},[]},
    {load_module,'Elixir.Archethic.OracleChain.Services.UCOPrice.Providers.Coingecko',
                 []},
    {update,'Elixir.Archethic.P2P.GeoPatch.GeoIP.MaxMindDB',{advanced,[]},[]},
    {update,'Elixir.Archethic.P2P.Listener',{advanced,[]},[]},
    {update,'Elixir.Archethic.P2P.MemTable',{advanced,[]},[]},
    {load_module,'Elixir.Archethic.P2P.Message.AcknowledgeStorage',[]},
    {update,'Elixir.Archethic.Reward.MemTables.RewardTokens',{advanced,[]},[]},
    {update,'Elixir.Archethic.SharedSecrets.MemTables.NetworkLookup',
            {advanced,[]},
            []},
    {update,'Elixir.Archethic.SharedSecrets.MemTables.OriginKeyLookup',
            {advanced,[]},
            []},
    {update,'Elixir.Archethic.Telemetry',supervisor},
    {update,'Elixir.Archethic.TransactionChain.MemTables.KOLedger',
            {advanced,[]},
            []},
    {update,'Elixir.Archethic.TransactionChain.MemTables.PendingLedger',
            {advanced,[]},
            []},
    {update,'Elixir.Archethic.Utils.JobCache',{advanced,[]},[]},
    {update,'Elixir.Archethic.Utils.JobConductor',{advanced,[]},[]},
    {update,'Elixir.Archethic.Utils.PortHandler',{advanced,[]},[]},
    {update,'Elixir.Archethic.Utils.Regression.Benchmark.SeedHolder',
            {advanced,[]},
            []},
    {load_module,'Elixir.Archethic.Utils',[]},
    {load_module,'Elixir.ArchethicWeb.API.Schema.Ownership',[]},
    {load_module,'Elixir.ArchethicWeb.API.Types.TransactionType',[]},
    {load_module,'Elixir.ArchethicWeb.API.WebHostingController',[]},
    {load_module,'Elixir.ArchethicWeb.Domain',[]},
    {update,'Elixir.ArchethicWeb.ExplorerLive.TopTransactionsCache',
            {advanced,[]},
            []},
    {load_module,'Elixir.ArchethicWeb.ExplorerRootController',[]},
    {load_module,'Elixir.ArchethicWeb.GraphQLSchema.Compiled',[]},
    {update,'Elixir.ArchethicWeb.Supervisor',supervisor},
    {update,'Elixir.ArchethicWeb.TransactionCache',{advanced,[]},[]},
    {load_module,'Elixir.ArchethicWeb.UpController',[]},
    {update,'Elixir.Archethic.Account.MemTables.TokenLedger',
            {advanced,[]},
            ['Elixir.Archethic.DB']},
    {update,'Elixir.Archethic.Account.MemTables.UCOLedger',
            {advanced,[]},
            ['Elixir.Archethic.DB']},
    {load_module,'Elixir.Archethic.BeaconChain.SummaryAggregate',
                 ['Elixir.Archethic.Utils']},
    {update,'Elixir.Archethic.BeaconChain.SummaryTimer',
            {advanced,[]},
            ['Elixir.Archethic.Utils']},
    {load_module,'Elixir.Archethic.Contracts.Interpreter.Library',
                 ['Elixir.Archethic.Election']},
    {update,'Elixir.Archethic.Contracts.TransactionLookup',
            {advanced,[]},
            ['Elixir.Archethic.DB']},
    {update,'Elixir.Archethic.Crypto.Ed25519.LibSodiumPort',
            {advanced,[]},
            ['Elixir.Archethic.Utils.PortHandler']},
    {update,'Elixir.Archethic.Crypto.NodeKeystore.Origin.SoftwareImpl',
            {advanced,[]},
            ['Elixir.Archethic.Utils']},
    {update,'Elixir.Archethic.Crypto.NodeKeystore.Origin.TPMImpl',
            {advanced,[]},
            ['Elixir.Archethic.Utils.PortHandler']},
    {update,'Elixir.Archethic.Crypto.NodeKeystore.SoftwareImpl',
            {advanced,[]},
            ['Elixir.Archethic.Utils']},
    {update,'Elixir.Archethic.DB.EmbeddedImpl.P2PView',
            {advanced,[]},
            ['Elixir.Archethic.Utils']},
    {load_module,'Elixir.Archethic.OracleChain.Services.UCOPrice',
                 ['Elixir.Archethic.Utils']},
    {update,'Elixir.Archethic.P2P.BootstrappingSeeds',
            {advanced,[]},
            ['Elixir.Archethic.DB']},
    {load_module,'Elixir.Archethic.TransactionChain.Transaction',
                 ['Elixir.Archethic.Utils']},
    {update,'Elixir.Archethic.DB.EmbeddedImpl.InputsWriter',
            {advanced,[]},
            ['Elixir.Archethic.DB.EmbeddedImpl','Elixir.Archethic.Utils']},
    {update,'Elixir.Archethic.SelfRepair.Scheduler',
            {advanced,[]},
            ['Elixir.Archethic.SelfRepair.Sync','Elixir.Archethic.Utils']},
    {load_module,'Elixir.Archethic.Utils.Regression.Benchmark.P2PMessage.Connection',
                 ['Elixir.Archethic.P2P.Message',
                  'Elixir.Archethic.P2P.MessageEnvelop',
                  'Elixir.Archethic.Utils']},
    {load_module,'Elixir.Archethic.Utils.Regression.Benchmark.P2PMessage',
                 ['Elixir.Archethic.Utils.Regression.Benchmark.P2PMessage.Connection']},
    {update,'Elixir.Archethic.OracleChain.MemTableLoader',
            {advanced,[]},
            ['Elixir.Archethic.OracleChain.MemTable',
             'Elixir.Archethic.TransactionChain']},
    {load_module,'Elixir.Archethic.P2P.ListenerProtocol',
                 ['Elixir.Archethic.P2P.Message',
                  'Elixir.Archethic.P2P.MessageEnvelop',
                  'Elixir.Archethic.Utils']},
    {update,'Elixir.Archethic.P2P.Client.Connection',
            {advanced,[]},
            ['Elixir.Archethic.P2P.MemTable','Elixir.Archethic.P2P.Message',
             'Elixir.Archethic.P2P.MessageEnvelop','Elixir.Archethic.Utils']},
    {update,'Elixir.Archethic.P2P.MemTableLoader',
            {advanced,[]},
            ['Elixir.Archethic.DB','Elixir.Archethic.P2P.MemTable',
             'Elixir.Archethic.TransactionChain','Elixir.Archethic.Utils']},
    {load_module,'Elixir.Archethic.Mining.PendingTransactionValidation',
                 ['Elixir.Archethic.DB','Elixir.Archethic.Election',
                  'Elixir.Archethic.TransactionChain',
                  'Elixir.Archethic.TransactionChain.Transaction',
                  'Elixir.Archethic.Utils']},
    {update,'Elixir.Archethic.Mining.StandaloneWorkflow',
            {advanced,[]},
            ['Elixir.Archethic.BeaconChain','Elixir.Archethic.Election',
             'Elixir.Archethic.Mining.PendingTransactionValidation',
             'Elixir.Archethic.Mining.ValidationContext',
             'Elixir.Archethic.P2P.Message',
             'Elixir.Archethic.TransactionChain',
             'Elixir.Archethic.TransactionChain.Transaction']},
    {update,'Elixir.Archethic.OracleChain.Scheduler',
            {advanced,[]},
            ['Elixir.Archethic','Elixir.Archethic.Bootstrap',
             'Elixir.Archethic.Election','Elixir.Archethic.TransactionChain',
             'Elixir.Archethic.TransactionChain.Transaction',
             'Elixir.Archethic.Utils',
             'Elixir.Archethic.Utils.DetectNodeResponsiveness']},
    {load_module,'Elixir.Archethic.P2P.Message',
                 ['Elixir.Archethic','Elixir.Archethic.BeaconChain',
                  'Elixir.Archethic.BeaconChain.Subset',
                  'Elixir.Archethic.BeaconChain.Summary',
                  'Elixir.Archethic.BeaconChain.SummaryAggregate',
                  'Elixir.Archethic.Election','Elixir.Archethic.Mining',
                  'Elixir.Archethic.Replication',
                  'Elixir.Archethic.TransactionChain',
                  'Elixir.Archethic.TransactionChain.Transaction',
                  'Elixir.Archethic.Utils',
                  'Elixir.ArchethicWeb.TransactionSubscriber']},
    {load_module,'Elixir.Archethic.P2P.MessageEnvelop',
                 ['Elixir.Archethic.P2P.Message','Elixir.Archethic.Utils']},
    {update,'Elixir.Archethic.TransactionChain.MemTablesLoader',
            {advanced,[]},
            ['Elixir.Archethic.DB',
             'Elixir.Archethic.TransactionChain.MemTables.PendingLedger']},
    {load_module,'Elixir.Archethic.TransactionChain',
                 ['Elixir.Archethic.DB','Elixir.Archethic.Election',
                  'Elixir.Archethic.P2P.Message',
                  'Elixir.Archethic.TransactionChain.MemTables.KOLedger',
                  'Elixir.Archethic.TransactionChain.MemTables.PendingLedger',
                  'Elixir.Archethic.TransactionChain.MemTablesLoader',
                  'Elixir.Archethic.TransactionChain.Transaction']},
    {update,'Elixir.Archethic.Reward.MemTablesLoader',
            {advanced,[]},
            ['Elixir.Archethic.Reward.MemTables.RewardTokens',
             'Elixir.Archethic.TransactionChain']},
    {update,'Elixir.Archethic.Utils.DetectNodeResponsiveness',
            {advanced,[]},
            ['Elixir.Archethic.Mining','Elixir.Archethic.TransactionChain']},
    {load_module,'Elixir.Archethic.Replication.TransactionContext',
                 ['Elixir.Archethic.Election',
                  'Elixir.Archethic.TransactionChain',
                  'Elixir.Archethic.TransactionChain.Transaction']},
    {update,'Elixir.Archethic.SelfRepair.RepairWorker',
            {advanced,[]},
            ['Elixir.Archethic.BeaconChain','Elixir.Archethic.Election',
             'Elixir.Archethic.Replication',
             'Elixir.Archethic.TransactionChain']},
    {update,'Elixir.Archethic.SelfRepair.Notifier',
            {advanced,[]},
            ['Elixir.Archethic.BeaconChain','Elixir.Archethic.Election',
             'Elixir.Archethic.TransactionChain',
             'Elixir.Archethic.TransactionChain.Transaction',
             'Elixir.Archethic.Utils']},
    {update,'Elixir.Archethic.SharedSecrets.NodeRenewalScheduler',
            {advanced,[]},
            ['Elixir.Archethic','Elixir.Archethic.Bootstrap',
             'Elixir.Archethic.Election','Elixir.Archethic.Utils',
             'Elixir.Archethic.Utils.DetectNodeResponsiveness']},
    {update,'Elixir.Archethic.SharedSecrets.MemTablesLoader',
            {advanced,[]},
            ['Elixir.Archethic.SharedSecrets.MemTables.NetworkLookup',
             'Elixir.Archethic.SharedSecrets.MemTables.OriginKeyLookup',
             'Elixir.Archethic.SharedSecrets.NodeRenewalScheduler',
             'Elixir.Archethic.TransactionChain','Elixir.Archethic.Utils']},
    {load_module,'Elixir.Archethic.Replication',
                 ['Elixir.Archethic.Election','Elixir.Archethic.P2P.Message',
                  'Elixir.Archethic.Replication.TransactionContext',
                  'Elixir.Archethic.TransactionChain',
                  'Elixir.Archethic.TransactionChain.Transaction',
                  'Elixir.Archethic.Utils']},
    {update,'Elixir.Archethic.Reward.Scheduler',
            {advanced,[]},
            ['Elixir.Archethic','Elixir.Archethic.Bootstrap',
             'Elixir.Archethic.DB','Elixir.Archethic.Election',
             'Elixir.Archethic.Utils',
             'Elixir.Archethic.Utils.DetectNodeResponsiveness']},
    {update,'Elixir.Archethic.Mining.DistributedWorkflow',
            {advanced,[]},
            ['Elixir.Archethic.BeaconChain','Elixir.Archethic.Election',
             'Elixir.Archethic.Mining.PendingTransactionValidation',
             'Elixir.Archethic.Mining.ValidationContext',
             'Elixir.Archethic.P2P.Message',
             'Elixir.Archethic.TransactionChain',
             'Elixir.Archethic.TransactionChain.Transaction',
             'Elixir.Archethic.Utils']},
    {load_module,'Elixir.Archethic.Mining',
                 ['Elixir.Archethic.Election',
                  'Elixir.Archethic.Mining.DistributedWorkflow',
                  'Elixir.Archethic.Mining.PendingTransactionValidation',
                  'Elixir.Archethic.Mining.StandaloneWorkflow']},
    {update,'Elixir.Archethic.Networking.Scheduler',
            {advanced,[]},
            ['Elixir.Archethic','Elixir.Archethic.Networking.PortForwarding',
             'Elixir.Archethic.TransactionChain',
             'Elixir.Archethic.TransactionChain.Transaction',
             'Elixir.Archethic.Utils']},
    {load_module,'Elixir.Archethic.Mining.ValidationContext',
                 ['Elixir.Archethic.Election','Elixir.Archethic.Mining',
                  'Elixir.Archethic.Replication',
                  'Elixir.Archethic.TransactionChain',
                  'Elixir.Archethic.TransactionChain.Transaction',
                  'Elixir.Archethic.Utils']},
    {load_module,'Elixir.Archethic.SelfRepair.Sync',
                 ['Elixir.Archethic.BeaconChain',
                  'Elixir.Archethic.BeaconChain.SummaryAggregate',
                  'Elixir.Archethic.Bootstrap','Elixir.Archethic.DB',
                  'Elixir.Archethic.Election','Elixir.Archethic.P2P.Message',
                  'Elixir.Archethic.TransactionChain',
                  'Elixir.Archethic.Utils']},
    {load_module,'Elixir.Archethic.DB.EmbeddedImpl',
                 ['Elixir.Archethic.DB.EmbeddedImpl.BootstrapInfo',
                  'Elixir.Archethic.DB.EmbeddedImpl.ChainIndex',
                  'Elixir.Archethic.DB.EmbeddedImpl.ChainReader',
                  'Elixir.Archethic.DB.EmbeddedImpl.ChainWriter',
                  'Elixir.Archethic.DB.EmbeddedImpl.InputsWriter',
                  'Elixir.Archethic.DB.EmbeddedImpl.P2PView',
                  'Elixir.Archethic.DB.EmbeddedImpl.StatsInfo',
                  'Elixir.Archethic.TransactionChain.Transaction',
                  'Elixir.Archethic.Utils']},
    {load_module,'Elixir.Archethic.DB',['Elixir.Archethic.DB.EmbeddedImpl']},
    {update,'Elixir.Archethic.Governance.Pools.MemTableLoader',
            {advanced,[]},
            ['Elixir.Archethic.TransactionChain']},
    {load_module,'Elixir.ArchethicWeb.AEWebRootController',
                 ['Elixir.ArchethicWeb.API.WebHostingController']},
    {load_module,'Elixir.ArchethicWeb.API.TransactionPayload',
                 ['Elixir.Archethic.Utils']},
    {load_module,'Elixir.ArchethicWeb.Endpoint',
                 ['Elixir.Archethic.Bootstrap']},
    {load_module,'Elixir.Archethic',
                 ['Elixir.Archethic.BeaconChain','Elixir.Archethic.Election',
                  'Elixir.Archethic.TransactionChain']},
    {update,'Elixir.ArchethicWeb.FaucetRateLimiter',
            {advanced,[]},
            ['Elixir.Archethic']},
    {load_module,'Elixir.ArchethicWeb.ExplorerIndexLive.TopTransactionsComponent',
                 ['Elixir.Archethic',
                  'Elixir.ArchethicWeb.ExplorerLive.TopTransactionsCache']},
    {load_module,'Elixir.ArchethicWeb.BeaconChainLive',
                 ['Elixir.Archethic','Elixir.Archethic.BeaconChain',
                  'Elixir.ArchethicWeb.TransactionCache']},
    {load_module,'Elixir.ArchethicWeb.API.OriginKeyController',
                 ['Elixir.Archethic','Elixir.Archethic.TransactionChain',
                  'Elixir.Archethic.TransactionChain.Transaction',
                  'Elixir.ArchethicWeb.TransactionSubscriber']},
    {load_module,'Elixir.ArchethicWeb.API.TransactionController',
                 ['Elixir.Archethic','Elixir.Archethic.Mining',
                  'Elixir.Archethic.TransactionChain.Transaction',
                  'Elixir.ArchethicWeb.API.TransactionPayload',
                  'Elixir.ArchethicWeb.TransactionSubscriber']},
    {load_module,'Elixir.ArchethicWeb.GraphQLSchema.Resolver',
                 ['Elixir.Archethic','Elixir.Archethic.BeaconChain',
                  'Elixir.Archethic.BeaconChain.SummaryAggregate',
                  'Elixir.Archethic.Mining',
                  'Elixir.Archethic.TransactionChain',
                  'Elixir.Archethic.TransactionChain.Transaction']},
    {load_module,'Elixir.ArchethicWeb.GraphQLSchema',
                 ['Elixir.ArchethicWeb.GraphQLSchema.Resolver']},
    {load_module,'Elixir.ArchethicWeb.NodeSharedSecretsChainLive',
                 ['Elixir.Archethic.TransactionChain']},
    {load_module,'Elixir.ArchethicWeb.OracleChainLive',
                 ['Elixir.Archethic.TransactionChain']},
    {load_module,'Elixir.ArchethicWeb.RewardChainLive',
                 ['Elixir.Archethic.TransactionChain']},
    {load_module,'Elixir.ArchethicWeb.TransactionChainLive',
                 ['Elixir.Archethic']},
    {update,'Elixir.ArchethicWeb.TransactionSubscriber',
            {advanced,[]},
            ['Elixir.Archethic.Election']},
    {load_module,'Elixir.ArchethicWeb.UserSocket',
                 ['Elixir.Archethic.Bootstrap']},
    {update,'Elixir.Archethic.Crypto.SharedSecretsKeystore.SoftwareImpl',
            {advanced,[]},
            ['Elixir.Archethic.DB','Elixir.Archethic.TransactionChain']},
    {update,'Elixir.Archethic.DB.EmbeddedImpl.ChainIndex',
            {advanced,[]},
            ['Elixir.Archethic.DB.EmbeddedImpl.ChainWriter',
             'Elixir.Archethic.TransactionChain.Transaction']},
    {update,'Elixir.Archethic.Account.MemTablesLoader',
            {advanced,[]},
            ['Elixir.Archethic.Account.MemTables.TokenLedger',
             'Elixir.Archethic.Account.MemTables.UCOLedger',
             'Elixir.Archethic.TransactionChain']},
    {load_module,'Elixir.Archethic.Application',
                 ['Elixir.Archethic.BeaconChain','Elixir.Archethic.Utils',
                  'Elixir.ArchethicWeb.Endpoint']},
    {update,'Elixir.Archethic.DB.EmbeddedImpl.ChainWriter',
            {advanced,[]},
            ['Elixir.Archethic.BeaconChain.Summary',
             'Elixir.Archethic.BeaconChain.SummaryAggregate',
             'Elixir.Archethic.DB.EmbeddedImpl.ChainIndex',
             'Elixir.Archethic.Utils']},
    {update,'Elixir.Archethic.BeaconChain.SlotTimer',
            {advanced,[]},
            ['Elixir.Archethic.BeaconChain',
             'Elixir.Archethic.BeaconChain.SummaryTimer',
             'Elixir.Archethic.Bootstrap','Elixir.Archethic.DB',
             'Elixir.Archethic.Utils']},
    {load_module,'Elixir.Archethic.BeaconChain.Summary',
                 ['Elixir.Archethic.BeaconChain.SlotTimer',
                  'Elixir.Archethic.Utils']},
    {update,'Elixir.Archethic.BeaconChain.Subset.SummaryCache',
            {advanced,[]},
            ['Elixir.Archethic.BeaconChain.SummaryTimer',
             'Elixir.Archethic.Utils']},
    {load_module,'Elixir.ArchethicWeb.ExplorerView',
                 ['Elixir.Archethic.BeaconChain.Summary',
                  'Elixir.Archethic.Utils']},
    {load_module,'Elixir.ArchethicWeb.GraphQLSchema.TransactionType',
                 ['Elixir.Archethic.TransactionChain.Transaction',
                  'Elixir.ArchethicWeb.GraphQLSchema.Resolver']},
    {load_module,'Elixir.Archethic.Bootstrap',
                 ['Elixir.Archethic.P2P.Listener',
                  'Elixir.Archethic.Replication',
                  'Elixir.Archethic.TransactionChain']},
    {load_module,'Elixir.Archethic.Election',
                 ['Elixir.Archethic.Election.Constraints',
                  'Elixir.Archethic.TransactionChain.Transaction',
                  'Elixir.Archethic.Utils']},
    {update,'Elixir.Archethic.BeaconChain.Subset',
            {advanced,[]},
            ['Elixir.Archethic.BeaconChain',
             'Elixir.Archethic.BeaconChain.SlotTimer',
             'Elixir.Archethic.BeaconChain.Subset.SummaryCache',
             'Elixir.Archethic.BeaconChain.Summary',
             'Elixir.Archethic.BeaconChain.SummaryTimer',
             'Elixir.Archethic.Election','Elixir.Archethic.Utils']},
    {update,'Elixir.Archethic.Contracts.Worker',
            {advanced,[]},
            ['Elixir.Archethic',
             'Elixir.Archethic.Contracts.ConditionInterpreter',
             'Elixir.Archethic.Election','Elixir.Archethic.Mining',
             'Elixir.Archethic.TransactionChain',
             'Elixir.Archethic.TransactionChain.Transaction',
             'Elixir.Archethic.Utils',
             'Elixir.Archethic.Utils.DetectNodeResponsiveness']},
    {update,'Elixir.Archethic.Contracts.Loader',
            {advanced,[]},
            ['Elixir.Archethic.Contracts.TransactionLookup',
             'Elixir.Archethic.Contracts.Worker','Elixir.Archethic.DB',
             'Elixir.Archethic.TransactionChain',
             'Elixir.Archethic.TransactionChain.Transaction']},
    {load_module,'Elixir.ArchethicWeb.FaucetController',
                 ['Elixir.Archethic',
                  'Elixir.Archethic.TransactionChain.Transaction',
                  'Elixir.Archethic.Utils',
                  'Elixir.ArchethicWeb.FaucetRateLimiter',
                  'Elixir.ArchethicWeb.TransactionSubscriber']},
    {load_module,'Elixir.Archethic.DB.EmbeddedImpl.ChainReader',
                 ['Elixir.Archethic.BeaconChain.Summary',
                  'Elixir.Archethic.BeaconChain.SummaryAggregate',
                  'Elixir.Archethic.DB.EmbeddedImpl.ChainIndex',
                  'Elixir.Archethic.DB.EmbeddedImpl.ChainWriter',
                  'Elixir.Archethic.TransactionChain.Transaction',
                  'Elixir.Archethic.Utils']},
    {load_module,'Elixir.ArchethicWeb.ExplorerRouter',
                 ['Elixir.ArchethicWeb.API.OriginKeyController',
                  'Elixir.ArchethicWeb.API.TransactionController',
                  'Elixir.ArchethicWeb.API.WebHostingController',
                  'Elixir.ArchethicWeb.ExplorerRootController',
                  'Elixir.ArchethicWeb.FaucetController',
                  'Elixir.ArchethicWeb.UpController']},
    {load_module,'Elixir.Archethic.BeaconChain',
                 ['Elixir.Archethic.BeaconChain.SlotTimer',
                  'Elixir.Archethic.BeaconChain.Subset',
                  'Elixir.Archethic.BeaconChain.Subset.SummaryCache',
                  'Elixir.Archethic.BeaconChain.SummaryAggregate',
                  'Elixir.Archethic.BeaconChain.SummaryTimer',
                  'Elixir.Archethic.BeaconChain.Update','Elixir.Archethic.DB',
                  'Elixir.Archethic.Election','Elixir.Archethic.Utils']},
    {add_module,'Elixir.Archethic.P2P.Message.FirstAddress'},
    {add_module,'Elixir.Archethic.P2P.Message.GetFirstAddress'}]}]}.
