{"1.4.7",
 [{"1.4.6",
   [{add_module,'Elixir.Archethic.Mining.ChainLock'},
    {add_module,'Elixir.Archethic.P2P.Message.RequestChainLock'},
    {add_module,'Elixir.Archethic.P2P.Message.UnlockChain'},
    {update,'Elixir.Archethic.Mining.Supervisor',supervisor},
    {apply,{supervisor,restart_child,['Elixir.Archethic.MiningSupervisor','Elixir.ChainLockSupervisor']}},
    {load_module,'Elixir.Archethic.P2P.Message.Error',brutal_purge,soft_purge,
                 []},
    {load_module,'Elixir.Archethic.P2P.MessageId',brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.Telemetry',supervisor},
    {load_module,'Elixir.Archethic.TransactionChain.TransactionData',
                 brutal_purge,soft_purge,[]},
    {load_module,'Elixir.Archethic.Utils.Regression.Api',brutal_purge,
                 soft_purge,[]},
    {load_module,'Elixir.ArchethicWeb.API.FunctionCallPayload',brutal_purge,
                 soft_purge,[]},
    {load_module,'Elixir.ArchethicWeb.ExplorerRouter',brutal_purge,soft_purge,
                 []},
    {load_module,'Elixir.Archethic.Mining',brutal_purge,soft_purge,
                 ['Elixir.Archethic.Mining.DistributedWorkflow',
                  'Elixir.Archethic.Mining.StandaloneWorkflow',
                  'Elixir.Archethic.P2P','Elixir.Archethic.P2P.Message']},
    {load_module,'Elixir.Archethic.Bootstrap.NetworkInit',brutal_purge,
                 soft_purge,
                 ['Elixir.Archethic.Mining']},
    {load_module,'Elixir.Archethic.DB.EmbeddedImpl.Encoding',brutal_purge,
                 soft_purge,
                 ['Elixir.Archethic.TransactionChain.TransactionData']},
    {load_module,'Elixir.Archethic.P2P.Message.StartMining',brutal_purge,
                 soft_purge,
                 ['Elixir.Archethic.Mining']},
    {load_module,'Elixir.ArchethicWeb.API.JsonRPC.TransactionSchema',
                 brutal_purge,soft_purge,
                 ['Elixir.Archethic.TransactionChain.TransactionData']},
    {load_module,'Elixir.ArchethicWeb.API.Schema.TransactionData',
                 brutal_purge,soft_purge,
                 ['Elixir.Archethic.TransactionChain.TransactionData']},
    {load_module,'Elixir.Archethic.P2P.Message',brutal_purge,soft_purge,
                 ['Elixir.Archethic.P2P.Message.Error',
                  'Elixir.Archethic.P2P.Message.StartMining']},
    {load_module,'Elixir.Archethic.P2P',brutal_purge,soft_purge,
                 ['Elixir.Archethic.P2P.Message',
                  'Elixir.Archethic.TransactionChain']},
    {load_module,'Elixir.Archethic.TransactionChain',brutal_purge,soft_purge,
                 ['Elixir.Archethic.P2P','Elixir.Archethic.P2P.Message']},
    {load_module,'Elixir.Archethic.Mining.PendingTransactionValidation',
                 brutal_purge,soft_purge,
                 ['Elixir.Archethic.P2P','Elixir.Archethic.TransactionChain',
                  'Elixir.Archethic.TransactionChain.TransactionData']},
    {load_module,'Elixir.Archethic.Mining.ValidationContext',brutal_purge,
                 soft_purge,
                 ['Elixir.Archethic.Mining','Elixir.Archethic.P2P',
                  'Elixir.Archethic.TransactionChain']},
    {load_module,'Elixir.Archethic',brutal_purge,soft_purge,
                 ['Elixir.Archethic.Mining','Elixir.Archethic.P2P',
                  'Elixir.Archethic.P2P.Message',
                  'Elixir.Archethic.TransactionChain']},
    {load_module,'Elixir.ArchethicWeb.API.JsonRPC.Method.CallContractFunction',
                 brutal_purge,soft_purge,
                 ['Elixir.Archethic',
                  'Elixir.ArchethicWeb.API.FunctionCallPayload']},
    {load_module,'Elixir.ArchethicWeb.Explorer.TransactionDetailsLive',
                 brutal_purge,soft_purge,
                 ['Elixir.Archethic',
                  'Elixir.Archethic.TransactionChain.TransactionData']},
    {update,'Elixir.Archethic.Mining.DistributedWorkflow',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic.Mining.PendingTransactionValidation',
             'Elixir.Archethic.Mining.ValidationContext',
             'Elixir.Archethic.P2P','Elixir.Archethic.P2P.Message',
             'Elixir.Archethic.TransactionChain']},
    {update,'Elixir.Archethic.Mining.StandaloneWorkflow',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic.Mining.PendingTransactionValidation',
             'Elixir.Archethic.Mining.ValidationContext',
             'Elixir.Archethic.P2P','Elixir.Archethic.P2P.Message',
             'Elixir.Archethic.TransactionChain']},
    {apply,{supervisor,terminate_child,
                       ['Elixir.Archethic.Telemetry',prometheus_metrics]}},
    {apply,{supervisor,restart_child,
                       ['Elixir.Archethic.Telemetry',prometheus_metrics]}},
    {apply,{'Elixir.Mix.Tasks.Archethic.Migrate',run,["1.4.7",true]}}]}],
 [{"1.4.6",
   [{delete_module,'Elixir.Archethic.Mining.ChainLock'},
    {delete_module,'Elixir.Archethic.P2P.Message.RequestChainLock'},
    {delete_module,'Elixir.Archethic.P2P.Message.UnlockChain'},
    {update,'Elixir.Archethic.Mining.Supervisor',supervisor},
    {load_module,'Elixir.Archethic.P2P.Message.Error',brutal_purge,soft_purge,
                 []},
    {load_module,'Elixir.Archethic.P2P.MessageId',brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.Telemetry',supervisor},
    {load_module,'Elixir.Archethic.TransactionChain.TransactionData',
                 brutal_purge,soft_purge,[]},
    {load_module,'Elixir.Archethic.Utils.Regression.Api',brutal_purge,
                 soft_purge,[]},
    {load_module,'Elixir.ArchethicWeb.API.FunctionCallPayload',brutal_purge,
                 soft_purge,[]},
    {load_module,'Elixir.ArchethicWeb.ExplorerRouter',brutal_purge,soft_purge,
                 []},
    {load_module,'Elixir.Archethic.Mining',brutal_purge,soft_purge,
                 ['Elixir.Archethic.Mining.DistributedWorkflow',
                  'Elixir.Archethic.Mining.StandaloneWorkflow',
                  'Elixir.Archethic.P2P','Elixir.Archethic.P2P.Message']},
    {load_module,'Elixir.Archethic.Bootstrap.NetworkInit',brutal_purge,
                 soft_purge,
                 ['Elixir.Archethic.Mining']},
    {load_module,'Elixir.Archethic.DB.EmbeddedImpl.Encoding',brutal_purge,
                 soft_purge,
                 ['Elixir.Archethic.TransactionChain.TransactionData']},
    {load_module,'Elixir.Archethic.P2P.Message.StartMining',brutal_purge,
                 soft_purge,
                 ['Elixir.Archethic.Mining']},
    {load_module,'Elixir.ArchethicWeb.API.JsonRPC.TransactionSchema',
                 brutal_purge,soft_purge,
                 ['Elixir.Archethic.TransactionChain.TransactionData']},
    {load_module,'Elixir.ArchethicWeb.API.Schema.TransactionData',
                 brutal_purge,soft_purge,
                 ['Elixir.Archethic.TransactionChain.TransactionData']},
    {load_module,'Elixir.Archethic.P2P.Message',brutal_purge,soft_purge,
                 ['Elixir.Archethic.P2P.Message.Error',
                  'Elixir.Archethic.P2P.Message.StartMining']},
    {load_module,'Elixir.Archethic.P2P',brutal_purge,soft_purge,
                 ['Elixir.Archethic.P2P.Message',
                  'Elixir.Archethic.TransactionChain']},
    {load_module,'Elixir.Archethic.TransactionChain',brutal_purge,soft_purge,
                 ['Elixir.Archethic.P2P','Elixir.Archethic.P2P.Message']},
    {load_module,'Elixir.Archethic.Mining.PendingTransactionValidation',
                 brutal_purge,soft_purge,
                 ['Elixir.Archethic.P2P','Elixir.Archethic.TransactionChain',
                  'Elixir.Archethic.TransactionChain.TransactionData']},
    {load_module,'Elixir.Archethic.Mining.ValidationContext',brutal_purge,
                 soft_purge,
                 ['Elixir.Archethic.Mining','Elixir.Archethic.P2P',
                  'Elixir.Archethic.TransactionChain']},
    {load_module,'Elixir.Archethic',brutal_purge,soft_purge,
                 ['Elixir.Archethic.Mining','Elixir.Archethic.P2P',
                  'Elixir.Archethic.P2P.Message',
                  'Elixir.Archethic.TransactionChain']},
    {load_module,'Elixir.ArchethicWeb.API.JsonRPC.Method.CallContractFunction',
                 brutal_purge,soft_purge,
                 ['Elixir.Archethic',
                  'Elixir.ArchethicWeb.API.FunctionCallPayload']},
    {load_module,'Elixir.ArchethicWeb.Explorer.TransactionDetailsLive',
                 brutal_purge,soft_purge,
                 ['Elixir.Archethic',
                  'Elixir.Archethic.TransactionChain.TransactionData']},
    {update,'Elixir.Archethic.Mining.DistributedWorkflow',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic.Mining.PendingTransactionValidation',
             'Elixir.Archethic.Mining.ValidationContext',
             'Elixir.Archethic.P2P','Elixir.Archethic.P2P.Message',
             'Elixir.Archethic.TransactionChain']},
    {update,'Elixir.Archethic.Mining.StandaloneWorkflow',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic.Mining.PendingTransactionValidation',
             'Elixir.Archethic.Mining.ValidationContext',
             'Elixir.Archethic.P2P','Elixir.Archethic.P2P.Message',
             'Elixir.Archethic.TransactionChain']}]}]}.
