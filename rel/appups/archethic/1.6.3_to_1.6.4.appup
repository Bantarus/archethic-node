{"1.6.4",
 [{"1.6.3",
   [{update,'Elixir.Archethic.BeaconChain.Subset.SummaryCache',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.DB.EmbeddedImpl.ChainWriter',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.P2P.Client.Connection',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.TransactionChain.Supervisor',supervisor},
    {update,'Elixir.Archethic.UTXO.Loader',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {load_module,'Elixir.ArchethicWeb.AEWeb.WebHostingController',
                 brutal_purge,soft_purge,[]},
    {load_module,'Elixir.ArchethicWeb.ExplorerRouter',brutal_purge,soft_purge,
                 []},
    {load_module,'Elixir.Archethic.BeaconChain.Subset.P2PSampling',
                 brutal_purge,soft_purge,
                 ['Elixir.Archethic']},
    {load_module,'Elixir.Archethic.DB.EmbeddedImpl',brutal_purge,soft_purge,
                 ['Elixir.Archethic.DB.EmbeddedImpl.ChainWriter']},
    {load_module,'Elixir.Archethic.TransactionChain',brutal_purge,soft_purge,
                 ['Elixir.Archethic']},
    {load_module,'Elixir.Archethic.P2P.Message.GetLastTransaction',
                 brutal_purge,soft_purge,
                 ['Elixir.Archethic.TransactionChain']},
    {load_module,'Elixir.Archethic.P2P.Message.GetTransaction',brutal_purge,
                 soft_purge,
                 ['Elixir.Archethic.TransactionChain']},
    {load_module,'Elixir.Archethic',brutal_purge,soft_purge,
                 ['Elixir.Archethic.TransactionChain']},
    {load_module,'Elixir.ArchethicWeb.API.JsonRPC.Method.CallContractFunction',
                 brutal_purge,soft_purge,
                 ['Elixir.Archethic']},
    {load_module,'Elixir.ArchethicWeb.API.JsonRPC.Method.SimulateContractExecution',
                 brutal_purge,soft_purge,
                 ['Elixir.Archethic']},
    {load_module,'Elixir.ArchethicWeb.API.JsonRPCController',brutal_purge,
                 soft_purge,
                 ['Elixir.Archethic']},
    {load_module,'Elixir.ArchethicWeb.API.REST.TransactionController',
                 brutal_purge,soft_purge,
                 ['Elixir.Archethic']},
    {load_module,'Elixir.Archethic.Contracts.Interpreter.Legacy.Library',
                 brutal_purge,soft_purge,
                 ['Elixir.Archethic','Elixir.Archethic.TransactionChain']},
    {load_module,'Elixir.Archethic.Reward',brutal_purge,soft_purge,
                 ['Elixir.Archethic','Elixir.Archethic.TransactionChain']},
    {load_module,'Elixir.Archethic.BeaconChain.NetworkCoordinates',
                 brutal_purge,soft_purge,
                 ['Elixir.Archethic',
                  'Elixir.Archethic.BeaconChain.Subset.P2PSampling',
                  'Elixir.Archethic.BeaconChain.Subset.SummaryCache']},
    {load_module,'Elixir.Archethic.Mining.PendingTransactionValidation',
                 brutal_purge,soft_purge,
                 ['Elixir.Archethic','Elixir.Archethic.Reward',
                  'Elixir.Archethic.TransactionChain']},
    {load_module,'Elixir.Archethic.Replication',brutal_purge,soft_purge,
                 ['Elixir.Archethic','Elixir.Archethic.Reward',
                  'Elixir.Archethic.TransactionChain']},
    {load_module,'Elixir.ArchethicWeb.API.GraphQL.Schema.Resolver',
                 brutal_purge,soft_purge,
                 ['Elixir.Archethic',
                  'Elixir.Archethic.BeaconChain.Subset.P2PSampling',
                  'Elixir.Archethic.TransactionChain']},
    {load_module,'Elixir.ArchethicWeb.Explorer.TransactionDetailsLive',
                 brutal_purge,soft_purge,
                 ['Elixir.Archethic','Elixir.Archethic.Reward',
                  'Elixir.Archethic.TransactionChain']},
    {update,'Elixir.Archethic.BeaconChain.Subset',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic',
             'Elixir.Archethic.BeaconChain.NetworkCoordinates',
             'Elixir.Archethic.BeaconChain.Subset.P2PSampling',
             'Elixir.Archethic.BeaconChain.Subset.SummaryCache']},
    {apply,{supervisor, terminate_child, ['Elixir.Archethic.TransactionChainSupervisor', 'Elixir.Archethic.TransactionChain.MemTables.KOLedger']}},
    {apply,{supervisor, delete_child, ['Elixir.Archethic.TransactionChainSupervisor', 'Elixir.Archethic.TransactionChain.MemTables.KOLedger']}},
    {delete_module,'Elixir.Archethic.TransactionChain.MemTables.KOLedger'},
    {apply,{supervisor,terminate_child,
                       ['Elixir.Archethic.Telemetry',prometheus_metrics]}},
    {apply,{supervisor,restart_child,
                       ['Elixir.Archethic.Telemetry',prometheus_metrics]}},
    {apply,{supervisor,terminate_child,
                       ['Elixir.Archethic.Telemetry',telemetry_poller]}},
    {apply,{supervisor,restart_child,
                       ['Elixir.Archethic.Telemetry',telemetry_poller]}},
    {apply,{'Elixir.Archethic.Contracts.Loader',reparse_workers_contract,[]}},
    {apply,{'Elixir.Mix.Tasks.Archethic.Migrate',run,["1.6.4",true]}}]}],
 [{"1.6.3",
   [{update,'Elixir.Archethic.BeaconChain.Subset.SummaryCache',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.DB.EmbeddedImpl.ChainWriter',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.P2P.Client.Connection',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {update,'Elixir.Archethic.TransactionChain.Supervisor',supervisor},
    {update,'Elixir.Archethic.UTXO.Loader',
            {advanced,[]},
            brutal_purge,soft_purge,[]},
    {load_module,'Elixir.ArchethicWeb.AEWeb.WebHostingController',
                 brutal_purge,soft_purge,[]},
    {load_module,'Elixir.ArchethicWeb.ExplorerRouter',brutal_purge,soft_purge,
                 []},
    {load_module,'Elixir.Archethic.BeaconChain.Subset.P2PSampling',
                 brutal_purge,soft_purge,
                 ['Elixir.Archethic']},
    {load_module,'Elixir.Archethic.DB.EmbeddedImpl',brutal_purge,soft_purge,
                 ['Elixir.Archethic.DB.EmbeddedImpl.ChainWriter']},
    {load_module,'Elixir.Archethic.TransactionChain',brutal_purge,soft_purge,
                 ['Elixir.Archethic']},
    {load_module,'Elixir.Archethic.P2P.Message.GetLastTransaction',
                 brutal_purge,soft_purge,
                 ['Elixir.Archethic.TransactionChain']},
    {load_module,'Elixir.Archethic.P2P.Message.GetTransaction',brutal_purge,
                 soft_purge,
                 ['Elixir.Archethic.TransactionChain']},
    {load_module,'Elixir.Archethic',brutal_purge,soft_purge,
                 ['Elixir.Archethic.TransactionChain']},
    {load_module,'Elixir.ArchethicWeb.API.JsonRPC.Method.CallContractFunction',
                 brutal_purge,soft_purge,
                 ['Elixir.Archethic']},
    {load_module,'Elixir.ArchethicWeb.API.JsonRPC.Method.SimulateContractExecution',
                 brutal_purge,soft_purge,
                 ['Elixir.Archethic']},
    {load_module,'Elixir.ArchethicWeb.API.JsonRPCController',brutal_purge,
                 soft_purge,
                 ['Elixir.Archethic']},
    {load_module,'Elixir.ArchethicWeb.API.REST.TransactionController',
                 brutal_purge,soft_purge,
                 ['Elixir.Archethic']},
    {load_module,'Elixir.Archethic.Contracts.Interpreter.Legacy.Library',
                 brutal_purge,soft_purge,
                 ['Elixir.Archethic','Elixir.Archethic.TransactionChain']},
    {load_module,'Elixir.Archethic.Reward',brutal_purge,soft_purge,
                 ['Elixir.Archethic','Elixir.Archethic.TransactionChain']},
    {load_module,'Elixir.Archethic.BeaconChain.NetworkCoordinates',
                 brutal_purge,soft_purge,
                 ['Elixir.Archethic',
                  'Elixir.Archethic.BeaconChain.Subset.P2PSampling',
                  'Elixir.Archethic.BeaconChain.Subset.SummaryCache']},
    {load_module,'Elixir.Archethic.Mining.PendingTransactionValidation',
                 brutal_purge,soft_purge,
                 ['Elixir.Archethic','Elixir.Archethic.Reward',
                  'Elixir.Archethic.TransactionChain']},
    {load_module,'Elixir.Archethic.Replication',brutal_purge,soft_purge,
                 ['Elixir.Archethic','Elixir.Archethic.Reward',
                  'Elixir.Archethic.TransactionChain']},
    {load_module,'Elixir.ArchethicWeb.API.GraphQL.Schema.Resolver',
                 brutal_purge,soft_purge,
                 ['Elixir.Archethic',
                  'Elixir.Archethic.BeaconChain.Subset.P2PSampling',
                  'Elixir.Archethic.TransactionChain']},
    {load_module,'Elixir.ArchethicWeb.Explorer.TransactionDetailsLive',
                 brutal_purge,soft_purge,
                 ['Elixir.Archethic','Elixir.Archethic.Reward',
                  'Elixir.Archethic.TransactionChain']},
    {update,'Elixir.Archethic.BeaconChain.Subset',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic',
             'Elixir.Archethic.BeaconChain.NetworkCoordinates',
             'Elixir.Archethic.BeaconChain.Subset.P2PSampling',
             'Elixir.Archethic.BeaconChain.Subset.SummaryCache']},
    {add_module,'Elixir.Archethic.TransactionChain.MemTables.KOLedger'}]}]}.
